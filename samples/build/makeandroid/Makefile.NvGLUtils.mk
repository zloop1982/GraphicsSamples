# Makefile generated by XPJ for android
-include Makefile.custom
ProjectName = NvGLUtils
NvGLUtils_cppfiles   += ./../../../extensions/src/NvGLUtils/NvBitFontGL.cpp
NvGLUtils_cppfiles   += ./../../../extensions/src/NvGLUtils/NvGLSLProgram.cpp
NvGLUtils_cppfiles   += ./../../../extensions/src/NvGLUtils/NvImageGL.cpp
NvGLUtils_cppfiles   += ./../../../extensions/src/NvGLUtils/NvLogsGL.cpp
NvGLUtils_cppfiles   += ./../../../extensions/src/NvGLUtils/NvMaterialGL.cpp
NvGLUtils_cppfiles   += ./../../../extensions/src/NvGLUtils/NvMeshExtGL.cpp
NvGLUtils_cppfiles   += ./../../../extensions/src/NvGLUtils/NvModelExtGL.cpp
NvGLUtils_cppfiles   += ./../../../extensions/src/NvGLUtils/NvModelGL.cpp
NvGLUtils_cppfiles   += ./../../../extensions/src/NvGLUtils/NvShapesGL.cpp
NvGLUtils_cppfiles   += ./../../../extensions/src/NvGLUtils/NvTimers.cpp
NvGLUtils_cppfiles   += ./../../../extensions/src/NvGLUtils/NvUIGL.cpp
NvGLUtils_cppfiles   += ./../../../extensions/src/NvGLUtils/NvUIGraphicFrameGL.cpp
NvGLUtils_cppfiles   += ./../../../extensions/src/NvGLUtils/NvUIGraphicGL.cpp
NvGLUtils_cppfiles   += ./../../../extensions/src/NvGLUtils/NvUIShadersGL.cpp
NvGLUtils_cppfiles   += ./../../../extensions/src/NvGLUtils/NvUITextureRenderGL.cpp

NvGLUtils_cpp_debug_dep    = $(addprefix $(DEPSDIR)/NvGLUtils/debug/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(NvGLUtils_cppfiles)))))
NvGLUtils_cc_debug_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.debug.P, $(NvGLUtils_ccfiles)))))
NvGLUtils_c_debug_dep      = $(addprefix $(DEPSDIR)/NvGLUtils/debug/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(NvGLUtils_cfiles)))))
NvGLUtils_debug_dep      = $(NvGLUtils_cpp_debug_dep) $(NvGLUtils_cc_debug_dep) $(NvGLUtils_c_debug_dep)
-include $(NvGLUtils_debug_dep)
NvGLUtils_cpp_release_dep    = $(addprefix $(DEPSDIR)/NvGLUtils/release/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(NvGLUtils_cppfiles)))))
NvGLUtils_cc_release_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.release.P, $(NvGLUtils_ccfiles)))))
NvGLUtils_c_release_dep      = $(addprefix $(DEPSDIR)/NvGLUtils/release/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(NvGLUtils_cfiles)))))
NvGLUtils_release_dep      = $(NvGLUtils_cpp_release_dep) $(NvGLUtils_cc_release_dep) $(NvGLUtils_c_release_dep)
-include $(NvGLUtils_release_dep)
NvGLUtils_debug_hpaths    := 
NvGLUtils_debug_hpaths    += ./../../../extensions/src/NvGLUtils
NvGLUtils_debug_hpaths    += ./../../../extensions/include
NvGLUtils_debug_hpaths    += ./../../../extensions/externals/include
NvGLUtils_debug_hpaths    += ./../../../extensions/include/NsFoundation
NvGLUtils_debug_hpaths    += ./../../../extensions/include/NvFoundation
NvGLUtils_debug_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/platforms/android-24/arch-arm/usr/include
NvGLUtils_debug_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/$(if $(NVPACK_NDK_TOOL_VERSION),$(NVPACK_NDK_TOOL_VERSION),4.8)/include
NvGLUtils_debug_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/$(if $(NVPACK_NDK_TOOL_VERSION),$(NVPACK_NDK_TOOL_VERSION),4.8)/libs/armeabi-v7a/include
NvGLUtils_debug_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/$(if $(NVPACK_NDK_TOOL_VERSION),$(NVPACK_NDK_TOOL_VERSION),4.8)/include/backward
NvGLUtils_debug_lpaths    := 
NvGLUtils_debug_lpaths    += ./../../../extensions/externals/lib/Tegra-Android
NvGLUtils_debug_lpaths    += ./../../../extensions/lib/Tegra-Android
NvGLUtils_debug_lpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/$(if $(NVPACK_NDK_TOOL_VERSION),$(NVPACK_NDK_TOOL_VERSION),4.8)/libs/armeabi-v7a
NvGLUtils_debug_defines   := $(NvGLUtils_custom_defines)
NvGLUtils_debug_defines   += android
NvGLUtils_debug_defines   += ANDROID
NvGLUtils_debug_defines   += _LIB
NvGLUtils_debug_defines   += NV_ANDROID
NvGLUtils_debug_defines   += __STDC_LIMIT_MACROS
NvGLUtils_debug_defines   += _DEBUG
NvGLUtils_debug_libraries := 
NvGLUtils_debug_common_cflags	:= $(NvGLUtils_custom_cflags)
NvGLUtils_debug_common_cflags    += -MMD
NvGLUtils_debug_common_cflags    += $(addprefix -D, $(NvGLUtils_debug_defines))
NvGLUtils_debug_common_cflags    += $(addprefix -I, $(NvGLUtils_debug_hpaths))
NvGLUtils_debug_common_cflags  += -fpic -fPIC -ffunction-sections -funwind-tables -fstack-protector -no-canonical-prefixes -march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16 -fstrict-aliasing -funswitch-loops -finline-limit=300
NvGLUtils_debug_common_cflags  += -funwind-tables -O0 -g -ggdb -fno-omit-frame-pointer -Wno-attributes
NvGLUtils_debug_cflags	:= $(NvGLUtils_debug_common_cflags)
NvGLUtils_debug_cppflags	:= $(NvGLUtils_debug_common_cflags)
NvGLUtils_debug_cppflags  += -std="gnu++11"
NvGLUtils_debug_lflags    := $(NvGLUtils_custom_lflags)
NvGLUtils_debug_lflags    += $(addprefix -L, $(NvGLUtils_debug_lpaths))
NvGLUtils_debug_lflags    += -Wl,--start-group $(addprefix -l, $(NvGLUtils_debug_libraries)) -Wl,--end-group
NvGLUtils_debug_objsdir  = $(OBJS_DIR)/NvGLUtils_debug
NvGLUtils_debug_cpp_o    = $(addprefix $(NvGLUtils_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(NvGLUtils_cppfiles)))))
NvGLUtils_debug_cc_o    = $(addprefix $(NvGLUtils_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(NvGLUtils_ccfiles)))))
NvGLUtils_debug_c_o      = $(addprefix $(NvGLUtils_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(NvGLUtils_cfiles)))))
NvGLUtils_debug_obj      =  $(NvGLUtils_debug_cpp_o) $(NvGLUtils_debug_cc_o) $(NvGLUtils_debug_c_o) 
NvGLUtils_debug_bin      := ./../../../extensions/lib/Tegra-Android/libNvGLUtilsD.a

clean_NvGLUtils_debug: 
	@$(ECHO) clean NvGLUtils debug
	@$(RMDIR) $(NvGLUtils_debug_objsdir)
	@$(RMDIR) $(NvGLUtils_debug_bin)
	@$(RMDIR) $(DEPSDIR)/NvGLUtils/debug

build_NvGLUtils_debug: postbuild_NvGLUtils_debug
postbuild_NvGLUtils_debug: mainbuild_NvGLUtils_debug
mainbuild_NvGLUtils_debug: prebuild_NvGLUtils_debug $(NvGLUtils_debug_bin)
prebuild_NvGLUtils_debug:

$(NvGLUtils_debug_bin): $(NvGLUtils_debug_obj) 
	mkdir -p `dirname ./../../../extensions/lib/Tegra-Android/libNvGLUtilsD.a`
	@$(AR) rcs $(NvGLUtils_debug_bin) $(NvGLUtils_debug_obj)
	$(ECHO) building $@ complete!

NvGLUtils_debug_DEPDIR = $(dir $(@))/$(*F)
$(NvGLUtils_debug_cpp_o): $(NvGLUtils_debug_objsdir)/%.o:
	$(ECHO) NvGLUtils: compiling debug $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(NvGLUtils_debug_objsdir),, $@))), $(NvGLUtils_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(NvGLUtils_debug_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(NvGLUtils_debug_objsdir),, $@))), $(NvGLUtils_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/NvGLUtils/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(NvGLUtils_debug_objsdir),, $@))), $(NvGLUtils_cppfiles))))))
	cp $(NvGLUtils_debug_DEPDIR).d $(addprefix $(DEPSDIR)/NvGLUtils/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(NvGLUtils_debug_objsdir),, $@))), $(NvGLUtils_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(NvGLUtils_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/NvGLUtils/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(NvGLUtils_debug_objsdir),, $@))), $(NvGLUtils_cppfiles))))).P; \
	  rm -f $(NvGLUtils_debug_DEPDIR).d

$(NvGLUtils_debug_cc_o): $(NvGLUtils_debug_objsdir)/%.o:
	$(ECHO) NvGLUtils: compiling debug $(filter %$(strip $(subst .cc.o,.cc, $(subst $(NvGLUtils_debug_objsdir),, $@))), $(NvGLUtils_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(NvGLUtils_debug_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(NvGLUtils_debug_objsdir),, $@))), $(NvGLUtils_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(NvGLUtils_debug_objsdir),, $@))), $(NvGLUtils_ccfiles))))))
	cp $(NvGLUtils_debug_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(NvGLUtils_debug_objsdir),, $@))), $(NvGLUtils_ccfiles))))).debug.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(NvGLUtils_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(NvGLUtils_debug_objsdir),, $@))), $(NvGLUtils_ccfiles))))).debug.P; \
	  rm -f $(NvGLUtils_debug_DEPDIR).d

$(NvGLUtils_debug_c_o): $(NvGLUtils_debug_objsdir)/%.o:
	$(ECHO) NvGLUtils: compiling debug $(filter %$(strip $(subst .c.o,.c, $(subst $(NvGLUtils_debug_objsdir),, $@))), $(NvGLUtils_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(NvGLUtils_debug_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(NvGLUtils_debug_objsdir),, $@))), $(NvGLUtils_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/NvGLUtils/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(NvGLUtils_debug_objsdir),, $@))), $(NvGLUtils_cfiles))))))
	cp $(NvGLUtils_debug_DEPDIR).d $(addprefix $(DEPSDIR)/NvGLUtils/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(NvGLUtils_debug_objsdir),, $@))), $(NvGLUtils_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(NvGLUtils_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/NvGLUtils/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(NvGLUtils_debug_objsdir),, $@))), $(NvGLUtils_cfiles))))).P; \
	  rm -f $(NvGLUtils_debug_DEPDIR).d

NvGLUtils_release_hpaths    := 
NvGLUtils_release_hpaths    += ./../../../extensions/src/NvGLUtils
NvGLUtils_release_hpaths    += ./../../../extensions/include
NvGLUtils_release_hpaths    += ./../../../extensions/externals/include
NvGLUtils_release_hpaths    += ./../../../extensions/include/NsFoundation
NvGLUtils_release_hpaths    += ./../../../extensions/include/NvFoundation
NvGLUtils_release_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/platforms/android-24/arch-arm/usr/include
NvGLUtils_release_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/$(if $(NVPACK_NDK_TOOL_VERSION),$(NVPACK_NDK_TOOL_VERSION),4.8)/include
NvGLUtils_release_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/$(if $(NVPACK_NDK_TOOL_VERSION),$(NVPACK_NDK_TOOL_VERSION),4.8)/libs/armeabi-v7a/include
NvGLUtils_release_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/$(if $(NVPACK_NDK_TOOL_VERSION),$(NVPACK_NDK_TOOL_VERSION),4.8)/include/backward
NvGLUtils_release_lpaths    := 
NvGLUtils_release_lpaths    += ./../../../extensions/externals/lib/Tegra-Android
NvGLUtils_release_lpaths    += ./../../../extensions/lib/Tegra-Android
NvGLUtils_release_lpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/$(if $(NVPACK_NDK_TOOL_VERSION),$(NVPACK_NDK_TOOL_VERSION),4.8)/libs/armeabi-v7a
NvGLUtils_release_defines   := $(NvGLUtils_custom_defines)
NvGLUtils_release_defines   += android
NvGLUtils_release_defines   += ANDROID
NvGLUtils_release_defines   += _LIB
NvGLUtils_release_defines   += NV_ANDROID
NvGLUtils_release_defines   += __STDC_LIMIT_MACROS
NvGLUtils_release_defines   += NDEBUG
NvGLUtils_release_libraries := 
NvGLUtils_release_common_cflags	:= $(NvGLUtils_custom_cflags)
NvGLUtils_release_common_cflags    += -MMD
NvGLUtils_release_common_cflags    += $(addprefix -D, $(NvGLUtils_release_defines))
NvGLUtils_release_common_cflags    += $(addprefix -I, $(NvGLUtils_release_hpaths))
NvGLUtils_release_common_cflags  += -fpic -fPIC -ffunction-sections -funwind-tables -fstack-protector -no-canonical-prefixes -march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16 -fstrict-aliasing -funswitch-loops -finline-limit=300
NvGLUtils_release_common_cflags  += -funwind-tables -O2 -fno-omit-frame-pointer -Wno-attributes
NvGLUtils_release_cflags	:= $(NvGLUtils_release_common_cflags)
NvGLUtils_release_cppflags	:= $(NvGLUtils_release_common_cflags)
NvGLUtils_release_cppflags  += -std="gnu++11"
NvGLUtils_release_lflags    := $(NvGLUtils_custom_lflags)
NvGLUtils_release_lflags    += $(addprefix -L, $(NvGLUtils_release_lpaths))
NvGLUtils_release_lflags    += -Wl,--start-group $(addprefix -l, $(NvGLUtils_release_libraries)) -Wl,--end-group
NvGLUtils_release_objsdir  = $(OBJS_DIR)/NvGLUtils_release
NvGLUtils_release_cpp_o    = $(addprefix $(NvGLUtils_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(NvGLUtils_cppfiles)))))
NvGLUtils_release_cc_o    = $(addprefix $(NvGLUtils_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(NvGLUtils_ccfiles)))))
NvGLUtils_release_c_o      = $(addprefix $(NvGLUtils_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(NvGLUtils_cfiles)))))
NvGLUtils_release_obj      =  $(NvGLUtils_release_cpp_o) $(NvGLUtils_release_cc_o) $(NvGLUtils_release_c_o) 
NvGLUtils_release_bin      := ./../../../extensions/lib/Tegra-Android/libNvGLUtils.a

clean_NvGLUtils_release: 
	@$(ECHO) clean NvGLUtils release
	@$(RMDIR) $(NvGLUtils_release_objsdir)
	@$(RMDIR) $(NvGLUtils_release_bin)
	@$(RMDIR) $(DEPSDIR)/NvGLUtils/release

build_NvGLUtils_release: postbuild_NvGLUtils_release
postbuild_NvGLUtils_release: mainbuild_NvGLUtils_release
mainbuild_NvGLUtils_release: prebuild_NvGLUtils_release $(NvGLUtils_release_bin)
prebuild_NvGLUtils_release:

$(NvGLUtils_release_bin): $(NvGLUtils_release_obj) 
	mkdir -p `dirname ./../../../extensions/lib/Tegra-Android/libNvGLUtils.a`
	@$(AR) rcs $(NvGLUtils_release_bin) $(NvGLUtils_release_obj)
	$(ECHO) building $@ complete!

NvGLUtils_release_DEPDIR = $(dir $(@))/$(*F)
$(NvGLUtils_release_cpp_o): $(NvGLUtils_release_objsdir)/%.o:
	$(ECHO) NvGLUtils: compiling release $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(NvGLUtils_release_objsdir),, $@))), $(NvGLUtils_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(NvGLUtils_release_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(NvGLUtils_release_objsdir),, $@))), $(NvGLUtils_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/NvGLUtils/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(NvGLUtils_release_objsdir),, $@))), $(NvGLUtils_cppfiles))))))
	cp $(NvGLUtils_release_DEPDIR).d $(addprefix $(DEPSDIR)/NvGLUtils/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(NvGLUtils_release_objsdir),, $@))), $(NvGLUtils_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(NvGLUtils_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/NvGLUtils/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(NvGLUtils_release_objsdir),, $@))), $(NvGLUtils_cppfiles))))).P; \
	  rm -f $(NvGLUtils_release_DEPDIR).d

$(NvGLUtils_release_cc_o): $(NvGLUtils_release_objsdir)/%.o:
	$(ECHO) NvGLUtils: compiling release $(filter %$(strip $(subst .cc.o,.cc, $(subst $(NvGLUtils_release_objsdir),, $@))), $(NvGLUtils_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(NvGLUtils_release_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(NvGLUtils_release_objsdir),, $@))), $(NvGLUtils_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(NvGLUtils_release_objsdir),, $@))), $(NvGLUtils_ccfiles))))))
	cp $(NvGLUtils_release_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(NvGLUtils_release_objsdir),, $@))), $(NvGLUtils_ccfiles))))).release.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(NvGLUtils_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(NvGLUtils_release_objsdir),, $@))), $(NvGLUtils_ccfiles))))).release.P; \
	  rm -f $(NvGLUtils_release_DEPDIR).d

$(NvGLUtils_release_c_o): $(NvGLUtils_release_objsdir)/%.o:
	$(ECHO) NvGLUtils: compiling release $(filter %$(strip $(subst .c.o,.c, $(subst $(NvGLUtils_release_objsdir),, $@))), $(NvGLUtils_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(NvGLUtils_release_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(NvGLUtils_release_objsdir),, $@))), $(NvGLUtils_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/NvGLUtils/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(NvGLUtils_release_objsdir),, $@))), $(NvGLUtils_cfiles))))))
	cp $(NvGLUtils_release_DEPDIR).d $(addprefix $(DEPSDIR)/NvGLUtils/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(NvGLUtils_release_objsdir),, $@))), $(NvGLUtils_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(NvGLUtils_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/NvGLUtils/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(NvGLUtils_release_objsdir),, $@))), $(NvGLUtils_cfiles))))).P; \
	  rm -f $(NvGLUtils_release_DEPDIR).d

clean_NvGLUtils:  clean_NvGLUtils_debug clean_NvGLUtils_release
	rm -rf $(DEPSDIR)

export VERBOSE
ifndef VERBOSE
.SILENT:
endif
