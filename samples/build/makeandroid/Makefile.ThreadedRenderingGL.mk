# Makefile generated by XPJ for android
-include Makefile.custom
ProjectName = ThreadedRenderingGL
ThreadedRenderingGL_cppfiles   += ./../../es3aep-kepler/ThreadedRenderingGL/BindlessTextureHelper.cpp
ThreadedRenderingGL_cppfiles   += ./../../es3aep-kepler/ThreadedRenderingGL/NvInstancedModelExtGL.cpp
ThreadedRenderingGL_cppfiles   += ./../../es3aep-kepler/ThreadedRenderingGL/NvMultiDrawModelSet.cpp
ThreadedRenderingGL_cppfiles   += ./../../es3aep-kepler/ThreadedRenderingGL/NvSharedVBOGL_MappedSubRanges.cpp
ThreadedRenderingGL_cppfiles   += ./../../es3aep-kepler/ThreadedRenderingGL/NvSharedVBOGL_Orphaning.cpp
ThreadedRenderingGL_cppfiles   += ./../../es3aep-kepler/ThreadedRenderingGL/NvSharedVBOGL_Pooled.cpp
ThreadedRenderingGL_cppfiles   += ./../../es3aep-kepler/ThreadedRenderingGL/School.cpp
ThreadedRenderingGL_cppfiles   += ./../../es3aep-kepler/ThreadedRenderingGL/ThreadedRenderingGL.cpp
ThreadedRenderingGL_cppfiles   += ./../../es3aep-kepler/ThreadedRenderingGL/VertexFormatBinder.cpp
ThreadedRenderingGL_GLSLC_src_es3aep-kepler_ThreadedRenderingGL_assets_src_shaders_groundplane_FS_glsl   += ./../../es3aep-kepler/ThreadedRenderingGL/assets/src_shaders/groundplane_FS.glsl
ThreadedRenderingGL_GLSLC_src_es3aep-kepler_ThreadedRenderingGL_assets_src_shaders_groundplane_VS_glsl   += ./../../es3aep-kepler/ThreadedRenderingGL/assets/src_shaders/groundplane_VS.glsl
ThreadedRenderingGL_GLSLC_src_es3aep-kepler_ThreadedRenderingGL_assets_src_shaders_skyboxcolor_FS_glsl   += ./../../es3aep-kepler/ThreadedRenderingGL/assets/src_shaders/skyboxcolor_FS.glsl
ThreadedRenderingGL_GLSLC_src_es3aep-kepler_ThreadedRenderingGL_assets_src_shaders_skyboxcolor_VS_glsl   += ./../../es3aep-kepler/ThreadedRenderingGL/assets/src_shaders/skyboxcolor_VS.glsl
ThreadedRenderingGL_GLSLC_src_es3aep-kepler_ThreadedRenderingGL_assets_src_shaders_staticfishMDI_FS_glsl   += ./../../es3aep-kepler/ThreadedRenderingGL/assets/src_shaders/staticfishMDI_FS.glsl
ThreadedRenderingGL_GLSLC_src_es3aep-kepler_ThreadedRenderingGL_assets_src_shaders_staticfishMDI_VS_glsl   += ./../../es3aep-kepler/ThreadedRenderingGL/assets/src_shaders/staticfishMDI_VS.glsl
ThreadedRenderingGL_GLSLC_src_es3aep-kepler_ThreadedRenderingGL_assets_src_shaders_staticfish_FS_glsl   += ./../../es3aep-kepler/ThreadedRenderingGL/assets/src_shaders/staticfish_FS.glsl
ThreadedRenderingGL_GLSLC_src_es3aep-kepler_ThreadedRenderingGL_assets_src_shaders_staticfish_VS_glsl   += ./../../es3aep-kepler/ThreadedRenderingGL/assets/src_shaders/staticfish_VS.glsl

ThreadedRenderingGL_cpp_debug_dep    = $(addprefix $(DEPSDIR)/ThreadedRenderingGL/debug/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(ThreadedRenderingGL_cppfiles)))))
ThreadedRenderingGL_cc_debug_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.debug.P, $(ThreadedRenderingGL_ccfiles)))))
ThreadedRenderingGL_c_debug_dep      = $(addprefix $(DEPSDIR)/ThreadedRenderingGL/debug/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(ThreadedRenderingGL_cfiles)))))
ThreadedRenderingGL_debug_dep      = $(ThreadedRenderingGL_cpp_debug_dep) $(ThreadedRenderingGL_cc_debug_dep) $(ThreadedRenderingGL_c_debug_dep)
-include $(ThreadedRenderingGL_debug_dep)
ThreadedRenderingGL_cpp_release_dep    = $(addprefix $(DEPSDIR)/ThreadedRenderingGL/release/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(ThreadedRenderingGL_cppfiles)))))
ThreadedRenderingGL_cc_release_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.release.P, $(ThreadedRenderingGL_ccfiles)))))
ThreadedRenderingGL_c_release_dep      = $(addprefix $(DEPSDIR)/ThreadedRenderingGL/release/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(ThreadedRenderingGL_cfiles)))))
ThreadedRenderingGL_release_dep      = $(ThreadedRenderingGL_cpp_release_dep) $(ThreadedRenderingGL_cc_release_dep) $(ThreadedRenderingGL_c_release_dep)
-include $(ThreadedRenderingGL_release_dep)
ThreadedRenderingGL_debug_hpaths    := 
ThreadedRenderingGL_debug_hpaths    += ./../../es3aep-kepler/ThreadedRenderingGL
ThreadedRenderingGL_debug_hpaths    += ./../../../extensions/include
ThreadedRenderingGL_debug_hpaths    += ./../../../extensions/externals/include
ThreadedRenderingGL_debug_hpaths    += ./../../../extensions/include/NsFoundation
ThreadedRenderingGL_debug_hpaths    += ./../../../extensions/include/NvFoundation
ThreadedRenderingGL_debug_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/platforms/android-24/arch-arm/usr/include
ThreadedRenderingGL_debug_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/$(if $(NVPACK_NDK_TOOL_VERSION),$(NVPACK_NDK_TOOL_VERSION),4.8)/include
ThreadedRenderingGL_debug_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/$(if $(NVPACK_NDK_TOOL_VERSION),$(NVPACK_NDK_TOOL_VERSION),4.8)/libs/armeabi-v7a/include
ThreadedRenderingGL_debug_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/$(if $(NVPACK_NDK_TOOL_VERSION),$(NVPACK_NDK_TOOL_VERSION),4.8)/include/backward
ThreadedRenderingGL_debug_lpaths    := 
ThreadedRenderingGL_debug_lpaths    += ./../../../extensions/externals/lib/Tegra-Android
ThreadedRenderingGL_debug_lpaths    += ./../../../extensions/lib/Tegra-Android
ThreadedRenderingGL_debug_lpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/$(if $(NVPACK_NDK_TOOL_VERSION),$(NVPACK_NDK_TOOL_VERSION),4.8)/libs/armeabi-v7a
ThreadedRenderingGL_debug_lpaths    += ./../../../extensions/lib/Tegra-Android
ThreadedRenderingGL_debug_lpaths    += ./../../../extensions/externals/lib/Tegra-Android
ThreadedRenderingGL_debug_defines   := $(ThreadedRenderingGL_custom_defines)
ThreadedRenderingGL_debug_defines   += android
ThreadedRenderingGL_debug_defines   += ANDROID
ThreadedRenderingGL_debug_defines   += _LIB
ThreadedRenderingGL_debug_defines   += NV_ANDROID
ThreadedRenderingGL_debug_defines   += __STDC_LIMIT_MACROS
ThreadedRenderingGL_debug_defines   += GW_APP_NAME=\"ThreadedRenderingGL\"
ThreadedRenderingGL_debug_defines   += GL_API_LEVEL_GL4
ThreadedRenderingGL_debug_defines   += USE_REGAL=1
ThreadedRenderingGL_debug_defines   += _DEBUG
ThreadedRenderingGL_debug_libraries := 
ThreadedRenderingGL_debug_libraries += NsFoundationD
ThreadedRenderingGL_debug_libraries += NvAppBaseD
ThreadedRenderingGL_debug_libraries += NvAssetLoaderD
ThreadedRenderingGL_debug_libraries += NvModelD
ThreadedRenderingGL_debug_libraries += NvGLUtilsD
ThreadedRenderingGL_debug_libraries += NvGamepadD
ThreadedRenderingGL_debug_libraries += NvImageD
ThreadedRenderingGL_debug_libraries += NvUID
ThreadedRenderingGL_debug_libraries += HalfD
ThreadedRenderingGL_debug_libraries += NvEGLUtilD
ThreadedRenderingGL_debug_libraries += gnustl_static
ThreadedRenderingGL_debug_libraries += EGL
ThreadedRenderingGL_debug_libraries += android
ThreadedRenderingGL_debug_libraries += m
ThreadedRenderingGL_debug_libraries += c
ThreadedRenderingGL_debug_libraries += supc++
ThreadedRenderingGL_debug_libraries += log
ThreadedRenderingGL_debug_libraries += gcc
ThreadedRenderingGL_debug_libraries += GLESv3
ThreadedRenderingGL_debug_libraries += RegalW_static
ThreadedRenderingGL_debug_common_cflags	:= $(ThreadedRenderingGL_custom_cflags)
ThreadedRenderingGL_debug_common_cflags    += -MMD
ThreadedRenderingGL_debug_common_cflags    += $(addprefix -D, $(ThreadedRenderingGL_debug_defines))
ThreadedRenderingGL_debug_common_cflags    += $(addprefix -I, $(ThreadedRenderingGL_debug_hpaths))
ThreadedRenderingGL_debug_common_cflags  += -fpic -fPIC -ffunction-sections -funwind-tables -fstack-protector -no-canonical-prefixes -march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16 -fstrict-aliasing -funswitch-loops -finline-limit=300
ThreadedRenderingGL_debug_common_cflags  += -funwind-tables -O0 -g -ggdb -fno-omit-frame-pointer -Wno-attributes
ThreadedRenderingGL_debug_cflags	:= $(ThreadedRenderingGL_debug_common_cflags)
ThreadedRenderingGL_debug_cppflags	:= $(ThreadedRenderingGL_debug_common_cflags)
ThreadedRenderingGL_debug_cppflags  += -std="gnu++11"
ThreadedRenderingGL_debug_lflags    := $(ThreadedRenderingGL_custom_lflags)
ThreadedRenderingGL_debug_lflags    += $(addprefix -L, $(ThreadedRenderingGL_debug_lpaths))
ThreadedRenderingGL_debug_lflags    += -Wl,--start-group $(addprefix -l, $(ThreadedRenderingGL_debug_libraries)) -Wl,--end-group
ThreadedRenderingGL_debug_lflags  += --sysroot=$(NDKROOT)/platforms/android-24/arch-arm -shared -Wl,--no-undefined
ThreadedRenderingGL_debug_objsdir  = $(OBJS_DIR)/ThreadedRenderingGL_debug
ThreadedRenderingGL_debug_cpp_o    = $(addprefix $(ThreadedRenderingGL_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(ThreadedRenderingGL_cppfiles)))))
ThreadedRenderingGL_debug_cc_o    = $(addprefix $(ThreadedRenderingGL_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(ThreadedRenderingGL_ccfiles)))))
ThreadedRenderingGL_debug_c_o      = $(addprefix $(ThreadedRenderingGL_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(ThreadedRenderingGL_cfiles)))))
ThreadedRenderingGL_debug_obj      =  $(ThreadedRenderingGL_debug_cpp_o) $(ThreadedRenderingGL_debug_cc_o) $(ThreadedRenderingGL_debug_c_o) 
ThreadedRenderingGL_debug_bin      := ./../../es3aep-kepler/ThreadedRenderingGL/libs/armeabi-v7a/libThreadedRenderingGL.so

clean_ThreadedRenderingGL_debug: 
	@$(ECHO) clean ThreadedRenderingGL debug
	@$(RMDIR) $(ThreadedRenderingGL_debug_objsdir)
	@$(RMDIR) $(ThreadedRenderingGL_debug_bin)
	@$(RMDIR) $(DEPSDIR)/ThreadedRenderingGL/debug

build_ThreadedRenderingGL_debug: postbuild_ThreadedRenderingGL_debug
postbuild_ThreadedRenderingGL_debug: mainbuild_ThreadedRenderingGL_debug preantbuild_ThreadedRenderingGL_debug antbuild_ThreadedRenderingGL_debug
preantbuild_ThreadedRenderingGL_debug: mainbuild_ThreadedRenderingGL_debug
antbuild_ThreadedRenderingGL_debug: preantbuild_ThreadedRenderingGL_debug
	dos2unix $(ANT_TOOL); JAVA_HOME=$(JAVA_HOME) $(ANT_TOOL) -f ./../../es3aep-kepler/ThreadedRenderingGL/build.xml debug
mainbuild_ThreadedRenderingGL_debug: prebuild_ThreadedRenderingGL_debug $(ThreadedRenderingGL_debug_bin)
prebuild_ThreadedRenderingGL_debug:

$(ThreadedRenderingGL_debug_bin): $(ThreadedRenderingGL_debug_obj) build_NsFoundation_debug build_NvAppBase_debug build_NvAssetLoader_debug build_NvModel_debug build_NvGLUtils_debug build_NvGamepad_debug build_NvImage_debug build_NvUI_debug build_Half_debug build_NvEGLUtil_debug 
	mkdir -p `dirname ./../../es3aep-kepler/ThreadedRenderingGL/libs/armeabi-v7a/libThreadedRenderingGL.so`
	$(CXX) -shared $(filter %.o, $(ThreadedRenderingGL_debug_obj)) $(ThreadedRenderingGL_debug_lflags) -lc -o $@ 
	$(ECHO) building $@ complete!

ThreadedRenderingGL_debug_DEPDIR = $(dir $(@))/$(*F)
$(ThreadedRenderingGL_debug_cpp_o): $(ThreadedRenderingGL_debug_objsdir)/%.o:
	$(ECHO) ThreadedRenderingGL: compiling debug $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(ThreadedRenderingGL_debug_objsdir),, $@))), $(ThreadedRenderingGL_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(ThreadedRenderingGL_debug_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(ThreadedRenderingGL_debug_objsdir),, $@))), $(ThreadedRenderingGL_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/ThreadedRenderingGL/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(ThreadedRenderingGL_debug_objsdir),, $@))), $(ThreadedRenderingGL_cppfiles))))))
	cp $(ThreadedRenderingGL_debug_DEPDIR).d $(addprefix $(DEPSDIR)/ThreadedRenderingGL/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(ThreadedRenderingGL_debug_objsdir),, $@))), $(ThreadedRenderingGL_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(ThreadedRenderingGL_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/ThreadedRenderingGL/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(ThreadedRenderingGL_debug_objsdir),, $@))), $(ThreadedRenderingGL_cppfiles))))).P; \
	  rm -f $(ThreadedRenderingGL_debug_DEPDIR).d

$(ThreadedRenderingGL_debug_cc_o): $(ThreadedRenderingGL_debug_objsdir)/%.o:
	$(ECHO) ThreadedRenderingGL: compiling debug $(filter %$(strip $(subst .cc.o,.cc, $(subst $(ThreadedRenderingGL_debug_objsdir),, $@))), $(ThreadedRenderingGL_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(ThreadedRenderingGL_debug_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(ThreadedRenderingGL_debug_objsdir),, $@))), $(ThreadedRenderingGL_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(ThreadedRenderingGL_debug_objsdir),, $@))), $(ThreadedRenderingGL_ccfiles))))))
	cp $(ThreadedRenderingGL_debug_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(ThreadedRenderingGL_debug_objsdir),, $@))), $(ThreadedRenderingGL_ccfiles))))).debug.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(ThreadedRenderingGL_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(ThreadedRenderingGL_debug_objsdir),, $@))), $(ThreadedRenderingGL_ccfiles))))).debug.P; \
	  rm -f $(ThreadedRenderingGL_debug_DEPDIR).d

$(ThreadedRenderingGL_debug_c_o): $(ThreadedRenderingGL_debug_objsdir)/%.o:
	$(ECHO) ThreadedRenderingGL: compiling debug $(filter %$(strip $(subst .c.o,.c, $(subst $(ThreadedRenderingGL_debug_objsdir),, $@))), $(ThreadedRenderingGL_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(ThreadedRenderingGL_debug_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(ThreadedRenderingGL_debug_objsdir),, $@))), $(ThreadedRenderingGL_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/ThreadedRenderingGL/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(ThreadedRenderingGL_debug_objsdir),, $@))), $(ThreadedRenderingGL_cfiles))))))
	cp $(ThreadedRenderingGL_debug_DEPDIR).d $(addprefix $(DEPSDIR)/ThreadedRenderingGL/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(ThreadedRenderingGL_debug_objsdir),, $@))), $(ThreadedRenderingGL_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(ThreadedRenderingGL_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/ThreadedRenderingGL/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(ThreadedRenderingGL_debug_objsdir),, $@))), $(ThreadedRenderingGL_cfiles))))).P; \
	  rm -f $(ThreadedRenderingGL_debug_DEPDIR).d

ThreadedRenderingGL_release_hpaths    := 
ThreadedRenderingGL_release_hpaths    += ./../../es3aep-kepler/ThreadedRenderingGL
ThreadedRenderingGL_release_hpaths    += ./../../../extensions/include
ThreadedRenderingGL_release_hpaths    += ./../../../extensions/externals/include
ThreadedRenderingGL_release_hpaths    += ./../../../extensions/include/NsFoundation
ThreadedRenderingGL_release_hpaths    += ./../../../extensions/include/NvFoundation
ThreadedRenderingGL_release_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/platforms/android-24/arch-arm/usr/include
ThreadedRenderingGL_release_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/$(if $(NVPACK_NDK_TOOL_VERSION),$(NVPACK_NDK_TOOL_VERSION),4.8)/include
ThreadedRenderingGL_release_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/$(if $(NVPACK_NDK_TOOL_VERSION),$(NVPACK_NDK_TOOL_VERSION),4.8)/libs/armeabi-v7a/include
ThreadedRenderingGL_release_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/$(if $(NVPACK_NDK_TOOL_VERSION),$(NVPACK_NDK_TOOL_VERSION),4.8)/include/backward
ThreadedRenderingGL_release_lpaths    := 
ThreadedRenderingGL_release_lpaths    += ./../../../extensions/externals/lib/Tegra-Android
ThreadedRenderingGL_release_lpaths    += ./../../../extensions/lib/Tegra-Android
ThreadedRenderingGL_release_lpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/$(if $(NVPACK_NDK_TOOL_VERSION),$(NVPACK_NDK_TOOL_VERSION),4.8)/libs/armeabi-v7a
ThreadedRenderingGL_release_lpaths    += ./../../../extensions/lib/Tegra-Android
ThreadedRenderingGL_release_lpaths    += ./../../../extensions/externals/lib/Tegra-Android
ThreadedRenderingGL_release_defines   := $(ThreadedRenderingGL_custom_defines)
ThreadedRenderingGL_release_defines   += android
ThreadedRenderingGL_release_defines   += ANDROID
ThreadedRenderingGL_release_defines   += _LIB
ThreadedRenderingGL_release_defines   += NV_ANDROID
ThreadedRenderingGL_release_defines   += __STDC_LIMIT_MACROS
ThreadedRenderingGL_release_defines   += GW_APP_NAME=\"ThreadedRenderingGL\"
ThreadedRenderingGL_release_defines   += GL_API_LEVEL_GL4
ThreadedRenderingGL_release_defines   += USE_REGAL=1
ThreadedRenderingGL_release_defines   += NDEBUG
ThreadedRenderingGL_release_libraries := 
ThreadedRenderingGL_release_libraries += NsFoundation
ThreadedRenderingGL_release_libraries += NvAppBase
ThreadedRenderingGL_release_libraries += NvAssetLoader
ThreadedRenderingGL_release_libraries += NvModel
ThreadedRenderingGL_release_libraries += NvGLUtils
ThreadedRenderingGL_release_libraries += NvGamepad
ThreadedRenderingGL_release_libraries += NvImage
ThreadedRenderingGL_release_libraries += NvUI
ThreadedRenderingGL_release_libraries += Half
ThreadedRenderingGL_release_libraries += NvEGLUtil
ThreadedRenderingGL_release_libraries += gnustl_static
ThreadedRenderingGL_release_libraries += EGL
ThreadedRenderingGL_release_libraries += android
ThreadedRenderingGL_release_libraries += m
ThreadedRenderingGL_release_libraries += c
ThreadedRenderingGL_release_libraries += supc++
ThreadedRenderingGL_release_libraries += log
ThreadedRenderingGL_release_libraries += gcc
ThreadedRenderingGL_release_libraries += GLESv3
ThreadedRenderingGL_release_libraries += RegalW_static
ThreadedRenderingGL_release_common_cflags	:= $(ThreadedRenderingGL_custom_cflags)
ThreadedRenderingGL_release_common_cflags    += -MMD
ThreadedRenderingGL_release_common_cflags    += $(addprefix -D, $(ThreadedRenderingGL_release_defines))
ThreadedRenderingGL_release_common_cflags    += $(addprefix -I, $(ThreadedRenderingGL_release_hpaths))
ThreadedRenderingGL_release_common_cflags  += -fpic -fPIC -ffunction-sections -funwind-tables -fstack-protector -no-canonical-prefixes -march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16 -fstrict-aliasing -funswitch-loops -finline-limit=300
ThreadedRenderingGL_release_common_cflags  += -funwind-tables -O2 -fno-omit-frame-pointer -Wno-attributes
ThreadedRenderingGL_release_cflags	:= $(ThreadedRenderingGL_release_common_cflags)
ThreadedRenderingGL_release_cppflags	:= $(ThreadedRenderingGL_release_common_cflags)
ThreadedRenderingGL_release_cppflags  += -std="gnu++11"
ThreadedRenderingGL_release_lflags    := $(ThreadedRenderingGL_custom_lflags)
ThreadedRenderingGL_release_lflags    += $(addprefix -L, $(ThreadedRenderingGL_release_lpaths))
ThreadedRenderingGL_release_lflags    += -Wl,--start-group $(addprefix -l, $(ThreadedRenderingGL_release_libraries)) -Wl,--end-group
ThreadedRenderingGL_release_lflags  += --sysroot=$(NDKROOT)/platforms/android-24/arch-arm -shared -Wl,--no-undefined
ThreadedRenderingGL_release_objsdir  = $(OBJS_DIR)/ThreadedRenderingGL_release
ThreadedRenderingGL_release_cpp_o    = $(addprefix $(ThreadedRenderingGL_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(ThreadedRenderingGL_cppfiles)))))
ThreadedRenderingGL_release_cc_o    = $(addprefix $(ThreadedRenderingGL_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(ThreadedRenderingGL_ccfiles)))))
ThreadedRenderingGL_release_c_o      = $(addprefix $(ThreadedRenderingGL_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(ThreadedRenderingGL_cfiles)))))
ThreadedRenderingGL_release_obj      =  $(ThreadedRenderingGL_release_cpp_o) $(ThreadedRenderingGL_release_cc_o) $(ThreadedRenderingGL_release_c_o) 
ThreadedRenderingGL_release_bin      := ./../../es3aep-kepler/ThreadedRenderingGL/libs/armeabi-v7a/libThreadedRenderingGL.so

clean_ThreadedRenderingGL_release: 
	@$(ECHO) clean ThreadedRenderingGL release
	@$(RMDIR) $(ThreadedRenderingGL_release_objsdir)
	@$(RMDIR) $(ThreadedRenderingGL_release_bin)
	@$(RMDIR) $(DEPSDIR)/ThreadedRenderingGL/release

build_ThreadedRenderingGL_release: postbuild_ThreadedRenderingGL_release
postbuild_ThreadedRenderingGL_release: mainbuild_ThreadedRenderingGL_release preantbuild_ThreadedRenderingGL_release antbuild_ThreadedRenderingGL_release
preantbuild_ThreadedRenderingGL_release: mainbuild_ThreadedRenderingGL_release
antbuild_ThreadedRenderingGL_release: preantbuild_ThreadedRenderingGL_release
	dos2unix $(ANT_TOOL); JAVA_HOME=$(JAVA_HOME) $(ANT_TOOL) -f ./../../es3aep-kepler/ThreadedRenderingGL/build.xml debug
mainbuild_ThreadedRenderingGL_release: prebuild_ThreadedRenderingGL_release $(ThreadedRenderingGL_release_bin)
prebuild_ThreadedRenderingGL_release:

$(ThreadedRenderingGL_release_bin): $(ThreadedRenderingGL_release_obj) build_NsFoundation_release build_NvAppBase_release build_NvAssetLoader_release build_NvModel_release build_NvGLUtils_release build_NvGamepad_release build_NvImage_release build_NvUI_release build_Half_release build_NvEGLUtil_release 
	mkdir -p `dirname ./../../es3aep-kepler/ThreadedRenderingGL/libs/armeabi-v7a/libThreadedRenderingGL.so`
	$(CXX) -shared $(filter %.o, $(ThreadedRenderingGL_release_obj)) $(ThreadedRenderingGL_release_lflags) -lc -o $@ 
	$(ECHO) building $@ complete!

ThreadedRenderingGL_release_DEPDIR = $(dir $(@))/$(*F)
$(ThreadedRenderingGL_release_cpp_o): $(ThreadedRenderingGL_release_objsdir)/%.o:
	$(ECHO) ThreadedRenderingGL: compiling release $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(ThreadedRenderingGL_release_objsdir),, $@))), $(ThreadedRenderingGL_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(ThreadedRenderingGL_release_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(ThreadedRenderingGL_release_objsdir),, $@))), $(ThreadedRenderingGL_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/ThreadedRenderingGL/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(ThreadedRenderingGL_release_objsdir),, $@))), $(ThreadedRenderingGL_cppfiles))))))
	cp $(ThreadedRenderingGL_release_DEPDIR).d $(addprefix $(DEPSDIR)/ThreadedRenderingGL/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(ThreadedRenderingGL_release_objsdir),, $@))), $(ThreadedRenderingGL_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(ThreadedRenderingGL_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/ThreadedRenderingGL/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(ThreadedRenderingGL_release_objsdir),, $@))), $(ThreadedRenderingGL_cppfiles))))).P; \
	  rm -f $(ThreadedRenderingGL_release_DEPDIR).d

$(ThreadedRenderingGL_release_cc_o): $(ThreadedRenderingGL_release_objsdir)/%.o:
	$(ECHO) ThreadedRenderingGL: compiling release $(filter %$(strip $(subst .cc.o,.cc, $(subst $(ThreadedRenderingGL_release_objsdir),, $@))), $(ThreadedRenderingGL_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(ThreadedRenderingGL_release_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(ThreadedRenderingGL_release_objsdir),, $@))), $(ThreadedRenderingGL_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(ThreadedRenderingGL_release_objsdir),, $@))), $(ThreadedRenderingGL_ccfiles))))))
	cp $(ThreadedRenderingGL_release_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(ThreadedRenderingGL_release_objsdir),, $@))), $(ThreadedRenderingGL_ccfiles))))).release.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(ThreadedRenderingGL_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(ThreadedRenderingGL_release_objsdir),, $@))), $(ThreadedRenderingGL_ccfiles))))).release.P; \
	  rm -f $(ThreadedRenderingGL_release_DEPDIR).d

$(ThreadedRenderingGL_release_c_o): $(ThreadedRenderingGL_release_objsdir)/%.o:
	$(ECHO) ThreadedRenderingGL: compiling release $(filter %$(strip $(subst .c.o,.c, $(subst $(ThreadedRenderingGL_release_objsdir),, $@))), $(ThreadedRenderingGL_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(ThreadedRenderingGL_release_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(ThreadedRenderingGL_release_objsdir),, $@))), $(ThreadedRenderingGL_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/ThreadedRenderingGL/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(ThreadedRenderingGL_release_objsdir),, $@))), $(ThreadedRenderingGL_cfiles))))))
	cp $(ThreadedRenderingGL_release_DEPDIR).d $(addprefix $(DEPSDIR)/ThreadedRenderingGL/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(ThreadedRenderingGL_release_objsdir),, $@))), $(ThreadedRenderingGL_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(ThreadedRenderingGL_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/ThreadedRenderingGL/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(ThreadedRenderingGL_release_objsdir),, $@))), $(ThreadedRenderingGL_cfiles))))).P; \
	  rm -f $(ThreadedRenderingGL_release_DEPDIR).d

clean_ThreadedRenderingGL:  clean_ThreadedRenderingGL_debug clean_ThreadedRenderingGL_release
	rm -rf $(DEPSDIR)

export VERBOSE
ifndef VERBOSE
.SILENT:
endif
