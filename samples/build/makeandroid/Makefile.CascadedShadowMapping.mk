# Makefile generated by XPJ for android
-include Makefile.custom
ProjectName = CascadedShadowMapping
CascadedShadowMapping_cppfiles   += ./../../gl4-maxwell/CascadedShadowMapping/CascadedShadowMapping.cpp
CascadedShadowMapping_cppfiles   += ./../../gl4-maxwell/CascadedShadowMapping/CascadedShadowMappingRenderer.cpp
CascadedShadowMapping_cppfiles   += ./../../gl4-maxwell/CascadedShadowMapping/KnightModel.cpp

CascadedShadowMapping_cpp_debug_dep    = $(addprefix $(DEPSDIR)/CascadedShadowMapping/debug/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(CascadedShadowMapping_cppfiles)))))
CascadedShadowMapping_cc_debug_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.debug.P, $(CascadedShadowMapping_ccfiles)))))
CascadedShadowMapping_c_debug_dep      = $(addprefix $(DEPSDIR)/CascadedShadowMapping/debug/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(CascadedShadowMapping_cfiles)))))
CascadedShadowMapping_debug_dep      = $(CascadedShadowMapping_cpp_debug_dep) $(CascadedShadowMapping_cc_debug_dep) $(CascadedShadowMapping_c_debug_dep)
-include $(CascadedShadowMapping_debug_dep)
CascadedShadowMapping_cpp_release_dep    = $(addprefix $(DEPSDIR)/CascadedShadowMapping/release/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(CascadedShadowMapping_cppfiles)))))
CascadedShadowMapping_cc_release_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.release.P, $(CascadedShadowMapping_ccfiles)))))
CascadedShadowMapping_c_release_dep      = $(addprefix $(DEPSDIR)/CascadedShadowMapping/release/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(CascadedShadowMapping_cfiles)))))
CascadedShadowMapping_release_dep      = $(CascadedShadowMapping_cpp_release_dep) $(CascadedShadowMapping_cc_release_dep) $(CascadedShadowMapping_c_release_dep)
-include $(CascadedShadowMapping_release_dep)
CascadedShadowMapping_debug_hpaths    := 
CascadedShadowMapping_debug_hpaths    += ./../../gl4-maxwell/CascadedShadowMapping
CascadedShadowMapping_debug_hpaths    += ./../../../extensions/include
CascadedShadowMapping_debug_hpaths    += ./../../../extensions/externals/include
CascadedShadowMapping_debug_hpaths    += ./../../../extensions/include/NsFoundation
CascadedShadowMapping_debug_hpaths    += ./../../../extensions/include/NvFoundation
CascadedShadowMapping_debug_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/platforms/android-24/arch-arm/usr/include
CascadedShadowMapping_debug_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/$(if $(NVPACK_NDK_TOOL_VERSION),$(NVPACK_NDK_TOOL_VERSION),4.8)/include
CascadedShadowMapping_debug_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/$(if $(NVPACK_NDK_TOOL_VERSION),$(NVPACK_NDK_TOOL_VERSION),4.8)/libs/armeabi-v7a/include
CascadedShadowMapping_debug_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/$(if $(NVPACK_NDK_TOOL_VERSION),$(NVPACK_NDK_TOOL_VERSION),4.8)/include/backward
CascadedShadowMapping_debug_lpaths    := 
CascadedShadowMapping_debug_lpaths    += ./../../../extensions/externals/lib/Tegra-Android
CascadedShadowMapping_debug_lpaths    += ./../../../extensions/lib/Tegra-Android
CascadedShadowMapping_debug_lpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/$(if $(NVPACK_NDK_TOOL_VERSION),$(NVPACK_NDK_TOOL_VERSION),4.8)/libs/armeabi-v7a
CascadedShadowMapping_debug_lpaths    += ./../../../extensions/lib/Tegra-Android
CascadedShadowMapping_debug_lpaths    += ./../../../extensions/externals/lib/Tegra-Android
CascadedShadowMapping_debug_defines   := $(CascadedShadowMapping_custom_defines)
CascadedShadowMapping_debug_defines   += android
CascadedShadowMapping_debug_defines   += ANDROID
CascadedShadowMapping_debug_defines   += _LIB
CascadedShadowMapping_debug_defines   += NV_ANDROID
CascadedShadowMapping_debug_defines   += __STDC_LIMIT_MACROS
CascadedShadowMapping_debug_defines   += GW_APP_NAME=\"CascadedShadowMapping\"
CascadedShadowMapping_debug_defines   += GL_API_LEVEL_ES2
CascadedShadowMapping_debug_defines   += USE_REGAL=1
CascadedShadowMapping_debug_defines   += _DEBUG
CascadedShadowMapping_debug_libraries := 
CascadedShadowMapping_debug_libraries += NsFoundationD
CascadedShadowMapping_debug_libraries += NvAppBaseD
CascadedShadowMapping_debug_libraries += NvAssetLoaderD
CascadedShadowMapping_debug_libraries += NvModelD
CascadedShadowMapping_debug_libraries += NvGLUtilsD
CascadedShadowMapping_debug_libraries += NvGamepadD
CascadedShadowMapping_debug_libraries += NvImageD
CascadedShadowMapping_debug_libraries += NvUID
CascadedShadowMapping_debug_libraries += HalfD
CascadedShadowMapping_debug_libraries += NvEGLUtilD
CascadedShadowMapping_debug_libraries += gnustl_static
CascadedShadowMapping_debug_libraries += EGL
CascadedShadowMapping_debug_libraries += android
CascadedShadowMapping_debug_libraries += m
CascadedShadowMapping_debug_libraries += c
CascadedShadowMapping_debug_libraries += supc++
CascadedShadowMapping_debug_libraries += log
CascadedShadowMapping_debug_libraries += gcc
CascadedShadowMapping_debug_libraries += GLESv2
CascadedShadowMapping_debug_libraries += RegalW_static
CascadedShadowMapping_debug_common_cflags	:= $(CascadedShadowMapping_custom_cflags)
CascadedShadowMapping_debug_common_cflags    += -MMD
CascadedShadowMapping_debug_common_cflags    += $(addprefix -D, $(CascadedShadowMapping_debug_defines))
CascadedShadowMapping_debug_common_cflags    += $(addprefix -I, $(CascadedShadowMapping_debug_hpaths))
CascadedShadowMapping_debug_common_cflags  += -std="gnu++11"
CascadedShadowMapping_debug_common_cflags  += -fpic -fPIC -ffunction-sections -funwind-tables -fstack-protector -no-canonical-prefixes -march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16 -fstrict-aliasing -funswitch-loops -finline-limit=300
CascadedShadowMapping_debug_common_cflags  += -funwind-tables -O0 -g -ggdb -fno-omit-frame-pointer -Wno-attributes
CascadedShadowMapping_debug_cflags	:= $(CascadedShadowMapping_debug_common_cflags)
CascadedShadowMapping_debug_cppflags	:= $(CascadedShadowMapping_debug_common_cflags)
CascadedShadowMapping_debug_cppflags  += -std="gnu++11"
CascadedShadowMapping_debug_lflags    := $(CascadedShadowMapping_custom_lflags)
CascadedShadowMapping_debug_lflags    += $(addprefix -L, $(CascadedShadowMapping_debug_lpaths))
CascadedShadowMapping_debug_lflags    += -Wl,--start-group $(addprefix -l, $(CascadedShadowMapping_debug_libraries)) -Wl,--end-group
CascadedShadowMapping_debug_lflags  += --sysroot=$(NDKROOT)/platforms/android-24/arch-arm -shared -Wl,--no-undefined
CascadedShadowMapping_debug_objsdir  = $(OBJS_DIR)/CascadedShadowMapping_debug
CascadedShadowMapping_debug_cpp_o    = $(addprefix $(CascadedShadowMapping_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(CascadedShadowMapping_cppfiles)))))
CascadedShadowMapping_debug_cc_o    = $(addprefix $(CascadedShadowMapping_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(CascadedShadowMapping_ccfiles)))))
CascadedShadowMapping_debug_c_o      = $(addprefix $(CascadedShadowMapping_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(CascadedShadowMapping_cfiles)))))
CascadedShadowMapping_debug_obj      =  $(CascadedShadowMapping_debug_cpp_o) $(CascadedShadowMapping_debug_cc_o) $(CascadedShadowMapping_debug_c_o) 
CascadedShadowMapping_debug_bin      := ./../../gl4-maxwell/CascadedShadowMapping/libs/armeabi-v7a/libCascadedShadowMapping.so

clean_CascadedShadowMapping_debug: 
	@$(ECHO) clean CascadedShadowMapping debug
	@$(RMDIR) $(CascadedShadowMapping_debug_objsdir)
	@$(RMDIR) $(CascadedShadowMapping_debug_bin)
	@$(RMDIR) $(DEPSDIR)/CascadedShadowMapping/debug

build_CascadedShadowMapping_debug: postbuild_CascadedShadowMapping_debug
postbuild_CascadedShadowMapping_debug: mainbuild_CascadedShadowMapping_debug preantbuild_CascadedShadowMapping_debug antbuild_CascadedShadowMapping_debug
preantbuild_CascadedShadowMapping_debug: mainbuild_CascadedShadowMapping_debug
antbuild_CascadedShadowMapping_debug: preantbuild_CascadedShadowMapping_debug
	dos2unix $(ANT_TOOL); JAVA_HOME=$(JAVA_HOME) $(ANT_TOOL) -f ./../../gl4-maxwell/CascadedShadowMapping/build.xml debug
mainbuild_CascadedShadowMapping_debug: prebuild_CascadedShadowMapping_debug $(CascadedShadowMapping_debug_bin)
prebuild_CascadedShadowMapping_debug:

$(CascadedShadowMapping_debug_bin): $(CascadedShadowMapping_debug_obj) build_NsFoundation_debug build_NvAppBase_debug build_NvAssetLoader_debug build_NvModel_debug build_NvGLUtils_debug build_NvGamepad_debug build_NvImage_debug build_NvUI_debug build_Half_debug build_NvEGLUtil_debug 
	mkdir -p `dirname ./../../gl4-maxwell/CascadedShadowMapping/libs/armeabi-v7a/libCascadedShadowMapping.so`
	$(CXX) -shared $(filter %.o, $(CascadedShadowMapping_debug_obj)) $(CascadedShadowMapping_debug_lflags) -lc -o $@ 
	$(ECHO) building $@ complete!

CascadedShadowMapping_debug_DEPDIR = $(dir $(@))/$(*F)
$(CascadedShadowMapping_debug_cpp_o): $(CascadedShadowMapping_debug_objsdir)/%.o:
	$(ECHO) CascadedShadowMapping: compiling debug $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(CascadedShadowMapping_debug_objsdir),, $@))), $(CascadedShadowMapping_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(CascadedShadowMapping_debug_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(CascadedShadowMapping_debug_objsdir),, $@))), $(CascadedShadowMapping_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/CascadedShadowMapping/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(CascadedShadowMapping_debug_objsdir),, $@))), $(CascadedShadowMapping_cppfiles))))))
	cp $(CascadedShadowMapping_debug_DEPDIR).d $(addprefix $(DEPSDIR)/CascadedShadowMapping/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(CascadedShadowMapping_debug_objsdir),, $@))), $(CascadedShadowMapping_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(CascadedShadowMapping_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/CascadedShadowMapping/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(CascadedShadowMapping_debug_objsdir),, $@))), $(CascadedShadowMapping_cppfiles))))).P; \
	  rm -f $(CascadedShadowMapping_debug_DEPDIR).d

$(CascadedShadowMapping_debug_cc_o): $(CascadedShadowMapping_debug_objsdir)/%.o:
	$(ECHO) CascadedShadowMapping: compiling debug $(filter %$(strip $(subst .cc.o,.cc, $(subst $(CascadedShadowMapping_debug_objsdir),, $@))), $(CascadedShadowMapping_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(CascadedShadowMapping_debug_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(CascadedShadowMapping_debug_objsdir),, $@))), $(CascadedShadowMapping_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(CascadedShadowMapping_debug_objsdir),, $@))), $(CascadedShadowMapping_ccfiles))))))
	cp $(CascadedShadowMapping_debug_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(CascadedShadowMapping_debug_objsdir),, $@))), $(CascadedShadowMapping_ccfiles))))).debug.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(CascadedShadowMapping_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(CascadedShadowMapping_debug_objsdir),, $@))), $(CascadedShadowMapping_ccfiles))))).debug.P; \
	  rm -f $(CascadedShadowMapping_debug_DEPDIR).d

$(CascadedShadowMapping_debug_c_o): $(CascadedShadowMapping_debug_objsdir)/%.o:
	$(ECHO) CascadedShadowMapping: compiling debug $(filter %$(strip $(subst .c.o,.c, $(subst $(CascadedShadowMapping_debug_objsdir),, $@))), $(CascadedShadowMapping_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(CascadedShadowMapping_debug_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(CascadedShadowMapping_debug_objsdir),, $@))), $(CascadedShadowMapping_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/CascadedShadowMapping/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(CascadedShadowMapping_debug_objsdir),, $@))), $(CascadedShadowMapping_cfiles))))))
	cp $(CascadedShadowMapping_debug_DEPDIR).d $(addprefix $(DEPSDIR)/CascadedShadowMapping/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(CascadedShadowMapping_debug_objsdir),, $@))), $(CascadedShadowMapping_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(CascadedShadowMapping_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/CascadedShadowMapping/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(CascadedShadowMapping_debug_objsdir),, $@))), $(CascadedShadowMapping_cfiles))))).P; \
	  rm -f $(CascadedShadowMapping_debug_DEPDIR).d

CascadedShadowMapping_release_hpaths    := 
CascadedShadowMapping_release_hpaths    += ./../../gl4-maxwell/CascadedShadowMapping
CascadedShadowMapping_release_hpaths    += ./../../../extensions/include
CascadedShadowMapping_release_hpaths    += ./../../../extensions/externals/include
CascadedShadowMapping_release_hpaths    += ./../../../extensions/include/NsFoundation
CascadedShadowMapping_release_hpaths    += ./../../../extensions/include/NvFoundation
CascadedShadowMapping_release_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/platforms/android-24/arch-arm/usr/include
CascadedShadowMapping_release_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/$(if $(NVPACK_NDK_TOOL_VERSION),$(NVPACK_NDK_TOOL_VERSION),4.8)/include
CascadedShadowMapping_release_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/$(if $(NVPACK_NDK_TOOL_VERSION),$(NVPACK_NDK_TOOL_VERSION),4.8)/libs/armeabi-v7a/include
CascadedShadowMapping_release_hpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/$(if $(NVPACK_NDK_TOOL_VERSION),$(NVPACK_NDK_TOOL_VERSION),4.8)/include/backward
CascadedShadowMapping_release_lpaths    := 
CascadedShadowMapping_release_lpaths    += ./../../../extensions/externals/lib/Tegra-Android
CascadedShadowMapping_release_lpaths    += ./../../../extensions/lib/Tegra-Android
CascadedShadowMapping_release_lpaths    += $(if $(NVPACK_ROOT),$(NVPACK_ROOT),$(error the environment must define NVPACK_ROOT))/$(if $(NVPACK_NDK_VERSION),$(NVPACK_NDK_VERSION),android-ndk-r9d)/sources/cxx-stl/gnu-libstdc++/$(if $(NVPACK_NDK_TOOL_VERSION),$(NVPACK_NDK_TOOL_VERSION),4.8)/libs/armeabi-v7a
CascadedShadowMapping_release_lpaths    += ./../../../extensions/lib/Tegra-Android
CascadedShadowMapping_release_lpaths    += ./../../../extensions/externals/lib/Tegra-Android
CascadedShadowMapping_release_defines   := $(CascadedShadowMapping_custom_defines)
CascadedShadowMapping_release_defines   += android
CascadedShadowMapping_release_defines   += ANDROID
CascadedShadowMapping_release_defines   += _LIB
CascadedShadowMapping_release_defines   += NV_ANDROID
CascadedShadowMapping_release_defines   += __STDC_LIMIT_MACROS
CascadedShadowMapping_release_defines   += GW_APP_NAME=\"CascadedShadowMapping\"
CascadedShadowMapping_release_defines   += GL_API_LEVEL_ES2
CascadedShadowMapping_release_defines   += USE_REGAL=1
CascadedShadowMapping_release_defines   += NDEBUG
CascadedShadowMapping_release_libraries := 
CascadedShadowMapping_release_libraries += NsFoundation
CascadedShadowMapping_release_libraries += NvAppBase
CascadedShadowMapping_release_libraries += NvAssetLoader
CascadedShadowMapping_release_libraries += NvModel
CascadedShadowMapping_release_libraries += NvGLUtils
CascadedShadowMapping_release_libraries += NvGamepad
CascadedShadowMapping_release_libraries += NvImage
CascadedShadowMapping_release_libraries += NvUI
CascadedShadowMapping_release_libraries += Half
CascadedShadowMapping_release_libraries += NvEGLUtil
CascadedShadowMapping_release_libraries += gnustl_static
CascadedShadowMapping_release_libraries += EGL
CascadedShadowMapping_release_libraries += android
CascadedShadowMapping_release_libraries += m
CascadedShadowMapping_release_libraries += c
CascadedShadowMapping_release_libraries += supc++
CascadedShadowMapping_release_libraries += log
CascadedShadowMapping_release_libraries += gcc
CascadedShadowMapping_release_libraries += GLESv2
CascadedShadowMapping_release_libraries += RegalW_static
CascadedShadowMapping_release_common_cflags	:= $(CascadedShadowMapping_custom_cflags)
CascadedShadowMapping_release_common_cflags    += -MMD
CascadedShadowMapping_release_common_cflags    += $(addprefix -D, $(CascadedShadowMapping_release_defines))
CascadedShadowMapping_release_common_cflags    += $(addprefix -I, $(CascadedShadowMapping_release_hpaths))
CascadedShadowMapping_release_common_cflags  += -std="gnu++11"
CascadedShadowMapping_release_common_cflags  += -fpic -fPIC -ffunction-sections -funwind-tables -fstack-protector -no-canonical-prefixes -march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16 -fstrict-aliasing -funswitch-loops -finline-limit=300
CascadedShadowMapping_release_common_cflags  += -funwind-tables -O2 -fno-omit-frame-pointer -Wno-attributes
CascadedShadowMapping_release_cflags	:= $(CascadedShadowMapping_release_common_cflags)
CascadedShadowMapping_release_cppflags	:= $(CascadedShadowMapping_release_common_cflags)
CascadedShadowMapping_release_cppflags  += -std="gnu++11"
CascadedShadowMapping_release_lflags    := $(CascadedShadowMapping_custom_lflags)
CascadedShadowMapping_release_lflags    += $(addprefix -L, $(CascadedShadowMapping_release_lpaths))
CascadedShadowMapping_release_lflags    += -Wl,--start-group $(addprefix -l, $(CascadedShadowMapping_release_libraries)) -Wl,--end-group
CascadedShadowMapping_release_lflags  += --sysroot=$(NDKROOT)/platforms/android-24/arch-arm -shared -Wl,--no-undefined
CascadedShadowMapping_release_objsdir  = $(OBJS_DIR)/CascadedShadowMapping_release
CascadedShadowMapping_release_cpp_o    = $(addprefix $(CascadedShadowMapping_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(CascadedShadowMapping_cppfiles)))))
CascadedShadowMapping_release_cc_o    = $(addprefix $(CascadedShadowMapping_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(CascadedShadowMapping_ccfiles)))))
CascadedShadowMapping_release_c_o      = $(addprefix $(CascadedShadowMapping_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(CascadedShadowMapping_cfiles)))))
CascadedShadowMapping_release_obj      =  $(CascadedShadowMapping_release_cpp_o) $(CascadedShadowMapping_release_cc_o) $(CascadedShadowMapping_release_c_o) 
CascadedShadowMapping_release_bin      := ./../../gl4-maxwell/CascadedShadowMapping/libs/armeabi-v7a/libCascadedShadowMapping.so

clean_CascadedShadowMapping_release: 
	@$(ECHO) clean CascadedShadowMapping release
	@$(RMDIR) $(CascadedShadowMapping_release_objsdir)
	@$(RMDIR) $(CascadedShadowMapping_release_bin)
	@$(RMDIR) $(DEPSDIR)/CascadedShadowMapping/release

build_CascadedShadowMapping_release: postbuild_CascadedShadowMapping_release
postbuild_CascadedShadowMapping_release: mainbuild_CascadedShadowMapping_release preantbuild_CascadedShadowMapping_release antbuild_CascadedShadowMapping_release
preantbuild_CascadedShadowMapping_release: mainbuild_CascadedShadowMapping_release
antbuild_CascadedShadowMapping_release: preantbuild_CascadedShadowMapping_release
	dos2unix $(ANT_TOOL); JAVA_HOME=$(JAVA_HOME) $(ANT_TOOL) -f ./../../gl4-maxwell/CascadedShadowMapping/build.xml debug
mainbuild_CascadedShadowMapping_release: prebuild_CascadedShadowMapping_release $(CascadedShadowMapping_release_bin)
prebuild_CascadedShadowMapping_release:

$(CascadedShadowMapping_release_bin): $(CascadedShadowMapping_release_obj) build_NsFoundation_release build_NvAppBase_release build_NvAssetLoader_release build_NvModel_release build_NvGLUtils_release build_NvGamepad_release build_NvImage_release build_NvUI_release build_Half_release build_NvEGLUtil_release 
	mkdir -p `dirname ./../../gl4-maxwell/CascadedShadowMapping/libs/armeabi-v7a/libCascadedShadowMapping.so`
	$(CXX) -shared $(filter %.o, $(CascadedShadowMapping_release_obj)) $(CascadedShadowMapping_release_lflags) -lc -o $@ 
	$(ECHO) building $@ complete!

CascadedShadowMapping_release_DEPDIR = $(dir $(@))/$(*F)
$(CascadedShadowMapping_release_cpp_o): $(CascadedShadowMapping_release_objsdir)/%.o:
	$(ECHO) CascadedShadowMapping: compiling release $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(CascadedShadowMapping_release_objsdir),, $@))), $(CascadedShadowMapping_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(CascadedShadowMapping_release_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(CascadedShadowMapping_release_objsdir),, $@))), $(CascadedShadowMapping_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/CascadedShadowMapping/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(CascadedShadowMapping_release_objsdir),, $@))), $(CascadedShadowMapping_cppfiles))))))
	cp $(CascadedShadowMapping_release_DEPDIR).d $(addprefix $(DEPSDIR)/CascadedShadowMapping/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(CascadedShadowMapping_release_objsdir),, $@))), $(CascadedShadowMapping_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(CascadedShadowMapping_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/CascadedShadowMapping/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(CascadedShadowMapping_release_objsdir),, $@))), $(CascadedShadowMapping_cppfiles))))).P; \
	  rm -f $(CascadedShadowMapping_release_DEPDIR).d

$(CascadedShadowMapping_release_cc_o): $(CascadedShadowMapping_release_objsdir)/%.o:
	$(ECHO) CascadedShadowMapping: compiling release $(filter %$(strip $(subst .cc.o,.cc, $(subst $(CascadedShadowMapping_release_objsdir),, $@))), $(CascadedShadowMapping_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(CascadedShadowMapping_release_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(CascadedShadowMapping_release_objsdir),, $@))), $(CascadedShadowMapping_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(CascadedShadowMapping_release_objsdir),, $@))), $(CascadedShadowMapping_ccfiles))))))
	cp $(CascadedShadowMapping_release_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(CascadedShadowMapping_release_objsdir),, $@))), $(CascadedShadowMapping_ccfiles))))).release.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(CascadedShadowMapping_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(CascadedShadowMapping_release_objsdir),, $@))), $(CascadedShadowMapping_ccfiles))))).release.P; \
	  rm -f $(CascadedShadowMapping_release_DEPDIR).d

$(CascadedShadowMapping_release_c_o): $(CascadedShadowMapping_release_objsdir)/%.o:
	$(ECHO) CascadedShadowMapping: compiling release $(filter %$(strip $(subst .c.o,.c, $(subst $(CascadedShadowMapping_release_objsdir),, $@))), $(CascadedShadowMapping_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(CascadedShadowMapping_release_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(CascadedShadowMapping_release_objsdir),, $@))), $(CascadedShadowMapping_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/CascadedShadowMapping/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(CascadedShadowMapping_release_objsdir),, $@))), $(CascadedShadowMapping_cfiles))))))
	cp $(CascadedShadowMapping_release_DEPDIR).d $(addprefix $(DEPSDIR)/CascadedShadowMapping/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(CascadedShadowMapping_release_objsdir),, $@))), $(CascadedShadowMapping_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(CascadedShadowMapping_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/CascadedShadowMapping/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(CascadedShadowMapping_release_objsdir),, $@))), $(CascadedShadowMapping_cfiles))))).P; \
	  rm -f $(CascadedShadowMapping_release_DEPDIR).d

clean_CascadedShadowMapping:  clean_CascadedShadowMapping_debug clean_CascadedShadowMapping_release
	rm -rf $(DEPSDIR)

export VERBOSE
ifndef VERBOSE
.SILENT:
endif
