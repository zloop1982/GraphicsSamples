# Makefile generated by XPJ for linux64
-include Makefile.custom
ProjectName = NvEGLUtil
NvEGLUtil_cppfiles   += ./../../../extensions/src/NvEGLUtil/NvEGLUtil.cpp

NvEGLUtil_cpp_debug_dep    = $(addprefix $(DEPSDIR)/NvEGLUtil/debug/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(NvEGLUtil_cppfiles)))))
NvEGLUtil_cc_debug_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.debug.P, $(NvEGLUtil_ccfiles)))))
NvEGLUtil_c_debug_dep      = $(addprefix $(DEPSDIR)/NvEGLUtil/debug/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(NvEGLUtil_cfiles)))))
NvEGLUtil_debug_dep      = $(NvEGLUtil_cpp_debug_dep) $(NvEGLUtil_cc_debug_dep) $(NvEGLUtil_c_debug_dep)
-include $(NvEGLUtil_debug_dep)
NvEGLUtil_cpp_release_dep    = $(addprefix $(DEPSDIR)/NvEGLUtil/release/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(NvEGLUtil_cppfiles)))))
NvEGLUtil_cc_release_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.release.P, $(NvEGLUtil_ccfiles)))))
NvEGLUtil_c_release_dep      = $(addprefix $(DEPSDIR)/NvEGLUtil/release/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(NvEGLUtil_cfiles)))))
NvEGLUtil_release_dep      = $(NvEGLUtil_cpp_release_dep) $(NvEGLUtil_cc_release_dep) $(NvEGLUtil_c_release_dep)
-include $(NvEGLUtil_release_dep)
NvEGLUtil_debug_hpaths    := 
NvEGLUtil_debug_hpaths    += ./../../../extensions/src/NvEGLUtil
NvEGLUtil_debug_hpaths    += ./../../../extensions/include
NvEGLUtil_debug_hpaths    += ./../../../extensions/include/NsFoundation
NvEGLUtil_debug_hpaths    += ./../../../extensions/include/NvFoundation
NvEGLUtil_debug_hpaths    += ./../../../extensions/externals/include
NvEGLUtil_debug_hpaths    += ./../../../extensions/externals/include/GLFW
NvEGLUtil_debug_lpaths    := 
NvEGLUtil_debug_defines   := $(NvEGLUtil_custom_defines)
NvEGLUtil_debug_defines   += LINUX=1
NvEGLUtil_debug_defines   += NV_LINUX
NvEGLUtil_debug_defines   += _DEBUG
NvEGLUtil_debug_libraries := 
NvEGLUtil_debug_common_cflags	:= $(NvEGLUtil_custom_cflags)
NvEGLUtil_debug_common_cflags    += -MMD
NvEGLUtil_debug_common_cflags    += $(addprefix -D, $(NvEGLUtil_debug_defines))
NvEGLUtil_debug_common_cflags    += $(addprefix -I, $(NvEGLUtil_debug_hpaths))
NvEGLUtil_debug_common_cflags  += -m64
NvEGLUtil_debug_common_cflags  += -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function -malign-double
NvEGLUtil_debug_common_cflags  += -m64 -pthread
NvEGLUtil_debug_common_cflags  += -funwind-tables -O0 -g -ggdb -fno-omit-frame-pointer
NvEGLUtil_debug_cflags	:= $(NvEGLUtil_debug_common_cflags)
NvEGLUtil_debug_cppflags	:= $(NvEGLUtil_debug_common_cflags)
NvEGLUtil_debug_cppflags  += -Wno-reorder -std=c++11
NvEGLUtil_debug_lflags    := $(NvEGLUtil_custom_lflags)
NvEGLUtil_debug_lflags    += $(addprefix -L, $(NvEGLUtil_debug_lpaths))
NvEGLUtil_debug_lflags    += -Wl,--start-group $(addprefix -l, $(NvEGLUtil_debug_libraries)) -Wl,--end-group
NvEGLUtil_debug_lflags  += -Wl,--unresolved-symbols=ignore-in-shared-libs
NvEGLUtil_debug_lflags  += -m64 -pthread
NvEGLUtil_debug_lflags  += -m64
NvEGLUtil_debug_objsdir  = $(OBJS_DIR)/NvEGLUtil_debug
NvEGLUtil_debug_cpp_o    = $(addprefix $(NvEGLUtil_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(NvEGLUtil_cppfiles)))))
NvEGLUtil_debug_cc_o    = $(addprefix $(NvEGLUtil_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(NvEGLUtil_ccfiles)))))
NvEGLUtil_debug_c_o      = $(addprefix $(NvEGLUtil_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(NvEGLUtil_cfiles)))))
NvEGLUtil_debug_obj      =  $(NvEGLUtil_debug_cpp_o) $(NvEGLUtil_debug_cc_o) $(NvEGLUtil_debug_c_o) 
NvEGLUtil_debug_bin      := ./../../../extensions/lib/linux64/libNvEGLUtilD.a

clean_NvEGLUtil_debug: 
	@$(ECHO) clean NvEGLUtil debug
	@$(RMDIR) $(NvEGLUtil_debug_objsdir)
	@$(RMDIR) $(NvEGLUtil_debug_bin)
	@$(RMDIR) $(DEPSDIR)/NvEGLUtil/debug

build_NvEGLUtil_debug: postbuild_NvEGLUtil_debug
postbuild_NvEGLUtil_debug: mainbuild_NvEGLUtil_debug
mainbuild_NvEGLUtil_debug: prebuild_NvEGLUtil_debug $(NvEGLUtil_debug_bin)
prebuild_NvEGLUtil_debug:

$(NvEGLUtil_debug_bin): $(NvEGLUtil_debug_obj) 
	mkdir -p `dirname ./../../../extensions/lib/linux64/libNvEGLUtilD.a`
	@$(AR) rcs $(NvEGLUtil_debug_bin) $(NvEGLUtil_debug_obj)
	$(ECHO) building $@ complete!

NvEGLUtil_debug_DEPDIR = $(dir $(@))/$(*F)
$(NvEGLUtil_debug_cpp_o): $(NvEGLUtil_debug_objsdir)/%.o:
	$(ECHO) NvEGLUtil: compiling debug $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(NvEGLUtil_debug_objsdir),, $@))), $(NvEGLUtil_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(NvEGLUtil_debug_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(NvEGLUtil_debug_objsdir),, $@))), $(NvEGLUtil_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/NvEGLUtil/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(NvEGLUtil_debug_objsdir),, $@))), $(NvEGLUtil_cppfiles))))))
	cp $(NvEGLUtil_debug_DEPDIR).d $(addprefix $(DEPSDIR)/NvEGLUtil/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(NvEGLUtil_debug_objsdir),, $@))), $(NvEGLUtil_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(NvEGLUtil_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/NvEGLUtil/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(NvEGLUtil_debug_objsdir),, $@))), $(NvEGLUtil_cppfiles))))).P; \
	  rm -f $(NvEGLUtil_debug_DEPDIR).d

$(NvEGLUtil_debug_cc_o): $(NvEGLUtil_debug_objsdir)/%.o:
	$(ECHO) NvEGLUtil: compiling debug $(filter %$(strip $(subst .cc.o,.cc, $(subst $(NvEGLUtil_debug_objsdir),, $@))), $(NvEGLUtil_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(NvEGLUtil_debug_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(NvEGLUtil_debug_objsdir),, $@))), $(NvEGLUtil_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(NvEGLUtil_debug_objsdir),, $@))), $(NvEGLUtil_ccfiles))))))
	cp $(NvEGLUtil_debug_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(NvEGLUtil_debug_objsdir),, $@))), $(NvEGLUtil_ccfiles))))).debug.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(NvEGLUtil_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(NvEGLUtil_debug_objsdir),, $@))), $(NvEGLUtil_ccfiles))))).debug.P; \
	  rm -f $(NvEGLUtil_debug_DEPDIR).d

$(NvEGLUtil_debug_c_o): $(NvEGLUtil_debug_objsdir)/%.o:
	$(ECHO) NvEGLUtil: compiling debug $(filter %$(strip $(subst .c.o,.c, $(subst $(NvEGLUtil_debug_objsdir),, $@))), $(NvEGLUtil_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(NvEGLUtil_debug_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(NvEGLUtil_debug_objsdir),, $@))), $(NvEGLUtil_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/NvEGLUtil/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(NvEGLUtil_debug_objsdir),, $@))), $(NvEGLUtil_cfiles))))))
	cp $(NvEGLUtil_debug_DEPDIR).d $(addprefix $(DEPSDIR)/NvEGLUtil/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(NvEGLUtil_debug_objsdir),, $@))), $(NvEGLUtil_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(NvEGLUtil_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/NvEGLUtil/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(NvEGLUtil_debug_objsdir),, $@))), $(NvEGLUtil_cfiles))))).P; \
	  rm -f $(NvEGLUtil_debug_DEPDIR).d

NvEGLUtil_release_hpaths    := 
NvEGLUtil_release_hpaths    += ./../../../extensions/src/NvEGLUtil
NvEGLUtil_release_hpaths    += ./../../../extensions/include
NvEGLUtil_release_hpaths    += ./../../../extensions/include/NsFoundation
NvEGLUtil_release_hpaths    += ./../../../extensions/include/NvFoundation
NvEGLUtil_release_hpaths    += ./../../../extensions/externals/include
NvEGLUtil_release_hpaths    += ./../../../extensions/externals/include/GLFW
NvEGLUtil_release_lpaths    := 
NvEGLUtil_release_defines   := $(NvEGLUtil_custom_defines)
NvEGLUtil_release_defines   += LINUX=1
NvEGLUtil_release_defines   += NV_LINUX
NvEGLUtil_release_defines   += NDEBUG
NvEGLUtil_release_libraries := 
NvEGLUtil_release_common_cflags	:= $(NvEGLUtil_custom_cflags)
NvEGLUtil_release_common_cflags    += -MMD
NvEGLUtil_release_common_cflags    += $(addprefix -D, $(NvEGLUtil_release_defines))
NvEGLUtil_release_common_cflags    += $(addprefix -I, $(NvEGLUtil_release_hpaths))
NvEGLUtil_release_common_cflags  += -m64
NvEGLUtil_release_common_cflags  += -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function -malign-double
NvEGLUtil_release_common_cflags  += -m64 -pthread
NvEGLUtil_release_cflags	:= $(NvEGLUtil_release_common_cflags)
NvEGLUtil_release_cppflags	:= $(NvEGLUtil_release_common_cflags)
NvEGLUtil_release_cppflags  += -Wno-reorder -std=c++11
NvEGLUtil_release_lflags    := $(NvEGLUtil_custom_lflags)
NvEGLUtil_release_lflags    += $(addprefix -L, $(NvEGLUtil_release_lpaths))
NvEGLUtil_release_lflags    += -Wl,--start-group $(addprefix -l, $(NvEGLUtil_release_libraries)) -Wl,--end-group
NvEGLUtil_release_lflags  += -Wl,--unresolved-symbols=ignore-in-shared-libs
NvEGLUtil_release_lflags  += -m64 -pthread
NvEGLUtil_release_lflags  += -m64
NvEGLUtil_release_objsdir  = $(OBJS_DIR)/NvEGLUtil_release
NvEGLUtil_release_cpp_o    = $(addprefix $(NvEGLUtil_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(NvEGLUtil_cppfiles)))))
NvEGLUtil_release_cc_o    = $(addprefix $(NvEGLUtil_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(NvEGLUtil_ccfiles)))))
NvEGLUtil_release_c_o      = $(addprefix $(NvEGLUtil_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(NvEGLUtil_cfiles)))))
NvEGLUtil_release_obj      =  $(NvEGLUtil_release_cpp_o) $(NvEGLUtil_release_cc_o) $(NvEGLUtil_release_c_o) 
NvEGLUtil_release_bin      := ./../../../extensions/lib/linux64/libNvEGLUtil.a

clean_NvEGLUtil_release: 
	@$(ECHO) clean NvEGLUtil release
	@$(RMDIR) $(NvEGLUtil_release_objsdir)
	@$(RMDIR) $(NvEGLUtil_release_bin)
	@$(RMDIR) $(DEPSDIR)/NvEGLUtil/release

build_NvEGLUtil_release: postbuild_NvEGLUtil_release
postbuild_NvEGLUtil_release: mainbuild_NvEGLUtil_release
mainbuild_NvEGLUtil_release: prebuild_NvEGLUtil_release $(NvEGLUtil_release_bin)
prebuild_NvEGLUtil_release:

$(NvEGLUtil_release_bin): $(NvEGLUtil_release_obj) 
	mkdir -p `dirname ./../../../extensions/lib/linux64/libNvEGLUtil.a`
	@$(AR) rcs $(NvEGLUtil_release_bin) $(NvEGLUtil_release_obj)
	$(ECHO) building $@ complete!

NvEGLUtil_release_DEPDIR = $(dir $(@))/$(*F)
$(NvEGLUtil_release_cpp_o): $(NvEGLUtil_release_objsdir)/%.o:
	$(ECHO) NvEGLUtil: compiling release $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(NvEGLUtil_release_objsdir),, $@))), $(NvEGLUtil_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(NvEGLUtil_release_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(NvEGLUtil_release_objsdir),, $@))), $(NvEGLUtil_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/NvEGLUtil/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(NvEGLUtil_release_objsdir),, $@))), $(NvEGLUtil_cppfiles))))))
	cp $(NvEGLUtil_release_DEPDIR).d $(addprefix $(DEPSDIR)/NvEGLUtil/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(NvEGLUtil_release_objsdir),, $@))), $(NvEGLUtil_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(NvEGLUtil_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/NvEGLUtil/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(NvEGLUtil_release_objsdir),, $@))), $(NvEGLUtil_cppfiles))))).P; \
	  rm -f $(NvEGLUtil_release_DEPDIR).d

$(NvEGLUtil_release_cc_o): $(NvEGLUtil_release_objsdir)/%.o:
	$(ECHO) NvEGLUtil: compiling release $(filter %$(strip $(subst .cc.o,.cc, $(subst $(NvEGLUtil_release_objsdir),, $@))), $(NvEGLUtil_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(NvEGLUtil_release_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(NvEGLUtil_release_objsdir),, $@))), $(NvEGLUtil_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(NvEGLUtil_release_objsdir),, $@))), $(NvEGLUtil_ccfiles))))))
	cp $(NvEGLUtil_release_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(NvEGLUtil_release_objsdir),, $@))), $(NvEGLUtil_ccfiles))))).release.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(NvEGLUtil_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(NvEGLUtil_release_objsdir),, $@))), $(NvEGLUtil_ccfiles))))).release.P; \
	  rm -f $(NvEGLUtil_release_DEPDIR).d

$(NvEGLUtil_release_c_o): $(NvEGLUtil_release_objsdir)/%.o:
	$(ECHO) NvEGLUtil: compiling release $(filter %$(strip $(subst .c.o,.c, $(subst $(NvEGLUtil_release_objsdir),, $@))), $(NvEGLUtil_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(NvEGLUtil_release_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(NvEGLUtil_release_objsdir),, $@))), $(NvEGLUtil_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/NvEGLUtil/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(NvEGLUtil_release_objsdir),, $@))), $(NvEGLUtil_cfiles))))))
	cp $(NvEGLUtil_release_DEPDIR).d $(addprefix $(DEPSDIR)/NvEGLUtil/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(NvEGLUtil_release_objsdir),, $@))), $(NvEGLUtil_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(NvEGLUtil_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/NvEGLUtil/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(NvEGLUtil_release_objsdir),, $@))), $(NvEGLUtil_cfiles))))).P; \
	  rm -f $(NvEGLUtil_release_DEPDIR).d

clean_NvEGLUtil:  clean_NvEGLUtil_debug clean_NvEGLUtil_release
	rm -rf $(DEPSDIR)

export VERBOSE
ifndef VERBOSE
.SILENT:
endif
