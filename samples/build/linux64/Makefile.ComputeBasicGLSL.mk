# Makefile generated by XPJ for linux64
-include Makefile.custom
ProjectName = ComputeBasicGLSL
ComputeBasicGLSL_cppfiles   += ./../../es3aep-kepler/ComputeBasicGLSL/ComputeBasicGLSL.cpp

ComputeBasicGLSL_cpp_debug_dep    = $(addprefix $(DEPSDIR)/ComputeBasicGLSL/debug/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(ComputeBasicGLSL_cppfiles)))))
ComputeBasicGLSL_cc_debug_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.debug.P, $(ComputeBasicGLSL_ccfiles)))))
ComputeBasicGLSL_c_debug_dep      = $(addprefix $(DEPSDIR)/ComputeBasicGLSL/debug/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(ComputeBasicGLSL_cfiles)))))
ComputeBasicGLSL_debug_dep      = $(ComputeBasicGLSL_cpp_debug_dep) $(ComputeBasicGLSL_cc_debug_dep) $(ComputeBasicGLSL_c_debug_dep)
-include $(ComputeBasicGLSL_debug_dep)
ComputeBasicGLSL_cpp_release_dep    = $(addprefix $(DEPSDIR)/ComputeBasicGLSL/release/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.P, $(ComputeBasicGLSL_cppfiles)))))
ComputeBasicGLSL_cc_release_dep    = $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.release.P, $(ComputeBasicGLSL_ccfiles)))))
ComputeBasicGLSL_c_release_dep      = $(addprefix $(DEPSDIR)/ComputeBasicGLSL/release/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.P, $(ComputeBasicGLSL_cfiles)))))
ComputeBasicGLSL_release_dep      = $(ComputeBasicGLSL_cpp_release_dep) $(ComputeBasicGLSL_cc_release_dep) $(ComputeBasicGLSL_c_release_dep)
-include $(ComputeBasicGLSL_release_dep)
ComputeBasicGLSL_debug_hpaths    := 
ComputeBasicGLSL_debug_hpaths    += ./../../es3aep-kepler/ComputeBasicGLSL/assets/shaders
ComputeBasicGLSL_debug_hpaths    += ./../../es3aep-kepler/ComputeBasicGLSL
ComputeBasicGLSL_debug_hpaths    += ./../../../extensions/include
ComputeBasicGLSL_debug_hpaths    += ./../../../extensions/include/NsFoundation
ComputeBasicGLSL_debug_hpaths    += ./../../../extensions/include/NvFoundation
ComputeBasicGLSL_debug_hpaths    += ./../../../extensions/externals/include
ComputeBasicGLSL_debug_hpaths    += ./../../../extensions/externals/include/GLFW
ComputeBasicGLSL_debug_lpaths    := 
ComputeBasicGLSL_debug_lpaths    += ./../../../extensions/lib/linux64
ComputeBasicGLSL_debug_lpaths    += ./../../../extensions/externals/lib/linux64
ComputeBasicGLSL_debug_defines   := $(ComputeBasicGLSL_custom_defines)
ComputeBasicGLSL_debug_defines   += LINUX=1
ComputeBasicGLSL_debug_defines   += NV_LINUX
ComputeBasicGLSL_debug_defines   += GW_APP_NAME=\"ComputeBasicGLSL\"
ComputeBasicGLSL_debug_defines   += _DEBUG
ComputeBasicGLSL_debug_libraries := 
ComputeBasicGLSL_debug_libraries += NsFoundationD
ComputeBasicGLSL_debug_libraries += NvAppBaseD
ComputeBasicGLSL_debug_libraries += NvAssetLoaderD
ComputeBasicGLSL_debug_libraries += NvModelD
ComputeBasicGLSL_debug_libraries += NvGLUtilsD
ComputeBasicGLSL_debug_libraries += NvGamepadD
ComputeBasicGLSL_debug_libraries += NvImageD
ComputeBasicGLSL_debug_libraries += NvUID
ComputeBasicGLSL_debug_libraries += HalfD
ComputeBasicGLSL_debug_libraries += glfw3
ComputeBasicGLSL_debug_libraries += GLEW
ComputeBasicGLSL_debug_libraries += GL
ComputeBasicGLSL_debug_libraries += X11
ComputeBasicGLSL_debug_libraries += Xrandr
ComputeBasicGLSL_debug_libraries += Xxf86vm
ComputeBasicGLSL_debug_libraries += Xi
ComputeBasicGLSL_debug_libraries += Xinerama
ComputeBasicGLSL_debug_libraries += Xcursor
ComputeBasicGLSL_debug_libraries += dl
ComputeBasicGLSL_debug_common_cflags	:= $(ComputeBasicGLSL_custom_cflags)
ComputeBasicGLSL_debug_common_cflags    += -MMD
ComputeBasicGLSL_debug_common_cflags    += $(addprefix -D, $(ComputeBasicGLSL_debug_defines))
ComputeBasicGLSL_debug_common_cflags    += $(addprefix -I, $(ComputeBasicGLSL_debug_hpaths))
ComputeBasicGLSL_debug_common_cflags  += -m64
ComputeBasicGLSL_debug_common_cflags  += -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function -malign-double
ComputeBasicGLSL_debug_common_cflags  += -m64 -pthread
ComputeBasicGLSL_debug_common_cflags  += -funwind-tables -O0 -g -ggdb -fno-omit-frame-pointer
ComputeBasicGLSL_debug_cflags	:= $(ComputeBasicGLSL_debug_common_cflags)
ComputeBasicGLSL_debug_cppflags	:= $(ComputeBasicGLSL_debug_common_cflags)
ComputeBasicGLSL_debug_cppflags  += -Wno-reorder -std=c++11
ComputeBasicGLSL_debug_lflags    := $(ComputeBasicGLSL_custom_lflags)
ComputeBasicGLSL_debug_lflags    += $(addprefix -L, $(ComputeBasicGLSL_debug_lpaths))
ComputeBasicGLSL_debug_lflags    += -Wl,--start-group $(addprefix -l, $(ComputeBasicGLSL_debug_libraries)) -Wl,--end-group
ComputeBasicGLSL_debug_lflags  += -Wl,--unresolved-symbols=ignore-in-shared-libs
ComputeBasicGLSL_debug_lflags  += -m64 -pthread
ComputeBasicGLSL_debug_lflags  += -m64
ComputeBasicGLSL_debug_objsdir  = $(OBJS_DIR)/ComputeBasicGLSL_debug
ComputeBasicGLSL_debug_cpp_o    = $(addprefix $(ComputeBasicGLSL_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(ComputeBasicGLSL_cppfiles)))))
ComputeBasicGLSL_debug_cc_o    = $(addprefix $(ComputeBasicGLSL_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(ComputeBasicGLSL_ccfiles)))))
ComputeBasicGLSL_debug_c_o      = $(addprefix $(ComputeBasicGLSL_debug_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(ComputeBasicGLSL_cfiles)))))
ComputeBasicGLSL_debug_obj      =  $(ComputeBasicGLSL_debug_cpp_o) $(ComputeBasicGLSL_debug_cc_o) $(ComputeBasicGLSL_debug_c_o) 
ComputeBasicGLSL_debug_bin      := ./../../bin/linux64/ComputeBasicGLSLD

clean_ComputeBasicGLSL_debug: 
	@$(ECHO) clean ComputeBasicGLSL debug
	@$(RMDIR) $(ComputeBasicGLSL_debug_objsdir)
	@$(RMDIR) $(ComputeBasicGLSL_debug_bin)
	@$(RMDIR) $(DEPSDIR)/ComputeBasicGLSL/debug

build_ComputeBasicGLSL_debug: postbuild_ComputeBasicGLSL_debug
postbuild_ComputeBasicGLSL_debug: mainbuild_ComputeBasicGLSL_debug
mainbuild_ComputeBasicGLSL_debug: prebuild_ComputeBasicGLSL_debug $(ComputeBasicGLSL_debug_bin)
prebuild_ComputeBasicGLSL_debug:

$(ComputeBasicGLSL_debug_bin): $(ComputeBasicGLSL_debug_obj) build_NsFoundation_debug build_NvAppBase_debug build_NvAssetLoader_debug build_NvModel_debug build_NvGLUtils_debug build_NvGamepad_debug build_NvImage_debug build_NvUI_debug build_Half_debug 
	mkdir -p `dirname ./../../bin/linux64/ComputeBasicGLSLD`
	$(CCLD) $(filter %.o, $(ComputeBasicGLSL_debug_obj)) $(ComputeBasicGLSL_debug_lflags) -o $(ComputeBasicGLSL_debug_bin) 
	$(ECHO) building $@ complete!

ComputeBasicGLSL_debug_DEPDIR = $(dir $(@))/$(*F)
$(ComputeBasicGLSL_debug_cpp_o): $(ComputeBasicGLSL_debug_objsdir)/%.o:
	$(ECHO) ComputeBasicGLSL: compiling debug $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(ComputeBasicGLSL_debug_objsdir),, $@))), $(ComputeBasicGLSL_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(ComputeBasicGLSL_debug_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(ComputeBasicGLSL_debug_objsdir),, $@))), $(ComputeBasicGLSL_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/ComputeBasicGLSL/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(ComputeBasicGLSL_debug_objsdir),, $@))), $(ComputeBasicGLSL_cppfiles))))))
	cp $(ComputeBasicGLSL_debug_DEPDIR).d $(addprefix $(DEPSDIR)/ComputeBasicGLSL/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(ComputeBasicGLSL_debug_objsdir),, $@))), $(ComputeBasicGLSL_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(ComputeBasicGLSL_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/ComputeBasicGLSL/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(ComputeBasicGLSL_debug_objsdir),, $@))), $(ComputeBasicGLSL_cppfiles))))).P; \
	  rm -f $(ComputeBasicGLSL_debug_DEPDIR).d

$(ComputeBasicGLSL_debug_cc_o): $(ComputeBasicGLSL_debug_objsdir)/%.o:
	$(ECHO) ComputeBasicGLSL: compiling debug $(filter %$(strip $(subst .cc.o,.cc, $(subst $(ComputeBasicGLSL_debug_objsdir),, $@))), $(ComputeBasicGLSL_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(ComputeBasicGLSL_debug_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(ComputeBasicGLSL_debug_objsdir),, $@))), $(ComputeBasicGLSL_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(ComputeBasicGLSL_debug_objsdir),, $@))), $(ComputeBasicGLSL_ccfiles))))))
	cp $(ComputeBasicGLSL_debug_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(ComputeBasicGLSL_debug_objsdir),, $@))), $(ComputeBasicGLSL_ccfiles))))).debug.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(ComputeBasicGLSL_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(ComputeBasicGLSL_debug_objsdir),, $@))), $(ComputeBasicGLSL_ccfiles))))).debug.P; \
	  rm -f $(ComputeBasicGLSL_debug_DEPDIR).d

$(ComputeBasicGLSL_debug_c_o): $(ComputeBasicGLSL_debug_objsdir)/%.o:
	$(ECHO) ComputeBasicGLSL: compiling debug $(filter %$(strip $(subst .c.o,.c, $(subst $(ComputeBasicGLSL_debug_objsdir),, $@))), $(ComputeBasicGLSL_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(ComputeBasicGLSL_debug_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(ComputeBasicGLSL_debug_objsdir),, $@))), $(ComputeBasicGLSL_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/ComputeBasicGLSL/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(ComputeBasicGLSL_debug_objsdir),, $@))), $(ComputeBasicGLSL_cfiles))))))
	cp $(ComputeBasicGLSL_debug_DEPDIR).d $(addprefix $(DEPSDIR)/ComputeBasicGLSL/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(ComputeBasicGLSL_debug_objsdir),, $@))), $(ComputeBasicGLSL_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(ComputeBasicGLSL_debug_DEPDIR).d >> $(addprefix $(DEPSDIR)/ComputeBasicGLSL/debug/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(ComputeBasicGLSL_debug_objsdir),, $@))), $(ComputeBasicGLSL_cfiles))))).P; \
	  rm -f $(ComputeBasicGLSL_debug_DEPDIR).d

ComputeBasicGLSL_release_hpaths    := 
ComputeBasicGLSL_release_hpaths    += ./../../es3aep-kepler/ComputeBasicGLSL/assets/shaders
ComputeBasicGLSL_release_hpaths    += ./../../es3aep-kepler/ComputeBasicGLSL
ComputeBasicGLSL_release_hpaths    += ./../../../extensions/include
ComputeBasicGLSL_release_hpaths    += ./../../../extensions/include/NsFoundation
ComputeBasicGLSL_release_hpaths    += ./../../../extensions/include/NvFoundation
ComputeBasicGLSL_release_hpaths    += ./../../../extensions/externals/include
ComputeBasicGLSL_release_hpaths    += ./../../../extensions/externals/include/GLFW
ComputeBasicGLSL_release_lpaths    := 
ComputeBasicGLSL_release_lpaths    += ./../../../extensions/lib/linux64
ComputeBasicGLSL_release_lpaths    += ./../../../extensions/externals/lib/linux64
ComputeBasicGLSL_release_defines   := $(ComputeBasicGLSL_custom_defines)
ComputeBasicGLSL_release_defines   += LINUX=1
ComputeBasicGLSL_release_defines   += NV_LINUX
ComputeBasicGLSL_release_defines   += GW_APP_NAME=\"ComputeBasicGLSL\"
ComputeBasicGLSL_release_defines   += NDEBUG
ComputeBasicGLSL_release_libraries := 
ComputeBasicGLSL_release_libraries += NsFoundation
ComputeBasicGLSL_release_libraries += NvAppBase
ComputeBasicGLSL_release_libraries += NvAssetLoader
ComputeBasicGLSL_release_libraries += NvModel
ComputeBasicGLSL_release_libraries += NvGLUtils
ComputeBasicGLSL_release_libraries += NvGamepad
ComputeBasicGLSL_release_libraries += NvImage
ComputeBasicGLSL_release_libraries += NvUI
ComputeBasicGLSL_release_libraries += Half
ComputeBasicGLSL_release_libraries += glfw3
ComputeBasicGLSL_release_libraries += GLEW
ComputeBasicGLSL_release_libraries += GL
ComputeBasicGLSL_release_libraries += X11
ComputeBasicGLSL_release_libraries += Xrandr
ComputeBasicGLSL_release_libraries += Xxf86vm
ComputeBasicGLSL_release_libraries += Xi
ComputeBasicGLSL_release_libraries += Xinerama
ComputeBasicGLSL_release_libraries += Xcursor
ComputeBasicGLSL_release_libraries += dl
ComputeBasicGLSL_release_common_cflags	:= $(ComputeBasicGLSL_custom_cflags)
ComputeBasicGLSL_release_common_cflags    += -MMD
ComputeBasicGLSL_release_common_cflags    += $(addprefix -D, $(ComputeBasicGLSL_release_defines))
ComputeBasicGLSL_release_common_cflags    += $(addprefix -I, $(ComputeBasicGLSL_release_hpaths))
ComputeBasicGLSL_release_common_cflags  += -m64
ComputeBasicGLSL_release_common_cflags  += -funwind-tables -Wall -Wextra -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-unused-but-set-variable -Wno-switch -Wno-unused-variable -Wno-unused-function -malign-double
ComputeBasicGLSL_release_common_cflags  += -m64 -pthread
ComputeBasicGLSL_release_common_cflags  += -funwind-tables -O2 -fno-omit-frame-pointer
ComputeBasicGLSL_release_cflags	:= $(ComputeBasicGLSL_release_common_cflags)
ComputeBasicGLSL_release_cppflags	:= $(ComputeBasicGLSL_release_common_cflags)
ComputeBasicGLSL_release_cppflags  += -Wno-reorder -std=c++11
ComputeBasicGLSL_release_lflags    := $(ComputeBasicGLSL_custom_lflags)
ComputeBasicGLSL_release_lflags    += $(addprefix -L, $(ComputeBasicGLSL_release_lpaths))
ComputeBasicGLSL_release_lflags    += -Wl,--start-group $(addprefix -l, $(ComputeBasicGLSL_release_libraries)) -Wl,--end-group
ComputeBasicGLSL_release_lflags  += -Wl,--unresolved-symbols=ignore-in-shared-libs
ComputeBasicGLSL_release_lflags  += -m64 -pthread
ComputeBasicGLSL_release_lflags  += -m64
ComputeBasicGLSL_release_objsdir  = $(OBJS_DIR)/ComputeBasicGLSL_release
ComputeBasicGLSL_release_cpp_o    = $(addprefix $(ComputeBasicGLSL_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(ComputeBasicGLSL_cppfiles)))))
ComputeBasicGLSL_release_cc_o    = $(addprefix $(ComputeBasicGLSL_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(ComputeBasicGLSL_ccfiles)))))
ComputeBasicGLSL_release_c_o      = $(addprefix $(ComputeBasicGLSL_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(ComputeBasicGLSL_cfiles)))))
ComputeBasicGLSL_release_obj      =  $(ComputeBasicGLSL_release_cpp_o) $(ComputeBasicGLSL_release_cc_o) $(ComputeBasicGLSL_release_c_o) 
ComputeBasicGLSL_release_bin      := ./../../bin/linux64/ComputeBasicGLSL

clean_ComputeBasicGLSL_release: 
	@$(ECHO) clean ComputeBasicGLSL release
	@$(RMDIR) $(ComputeBasicGLSL_release_objsdir)
	@$(RMDIR) $(ComputeBasicGLSL_release_bin)
	@$(RMDIR) $(DEPSDIR)/ComputeBasicGLSL/release

build_ComputeBasicGLSL_release: postbuild_ComputeBasicGLSL_release
postbuild_ComputeBasicGLSL_release: mainbuild_ComputeBasicGLSL_release
mainbuild_ComputeBasicGLSL_release: prebuild_ComputeBasicGLSL_release $(ComputeBasicGLSL_release_bin)
prebuild_ComputeBasicGLSL_release:

$(ComputeBasicGLSL_release_bin): $(ComputeBasicGLSL_release_obj) build_NsFoundation_release build_NvAppBase_release build_NvAssetLoader_release build_NvModel_release build_NvGLUtils_release build_NvGamepad_release build_NvImage_release build_NvUI_release build_Half_release 
	mkdir -p `dirname ./../../bin/linux64/ComputeBasicGLSL`
	$(CCLD) $(filter %.o, $(ComputeBasicGLSL_release_obj)) $(ComputeBasicGLSL_release_lflags) -o $(ComputeBasicGLSL_release_bin) 
	$(ECHO) building $@ complete!

ComputeBasicGLSL_release_DEPDIR = $(dir $(@))/$(*F)
$(ComputeBasicGLSL_release_cpp_o): $(ComputeBasicGLSL_release_objsdir)/%.o:
	$(ECHO) ComputeBasicGLSL: compiling release $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(ComputeBasicGLSL_release_objsdir),, $@))), $(ComputeBasicGLSL_cppfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(ComputeBasicGLSL_release_cppflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(ComputeBasicGLSL_release_objsdir),, $@))), $(ComputeBasicGLSL_cppfiles)) -o $@
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/ComputeBasicGLSL/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(ComputeBasicGLSL_release_objsdir),, $@))), $(ComputeBasicGLSL_cppfiles))))))
	cp $(ComputeBasicGLSL_release_DEPDIR).d $(addprefix $(DEPSDIR)/ComputeBasicGLSL/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(ComputeBasicGLSL_release_objsdir),, $@))), $(ComputeBasicGLSL_cppfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(ComputeBasicGLSL_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/ComputeBasicGLSL/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(ComputeBasicGLSL_release_objsdir),, $@))), $(ComputeBasicGLSL_cppfiles))))).P; \
	  rm -f $(ComputeBasicGLSL_release_DEPDIR).d

$(ComputeBasicGLSL_release_cc_o): $(ComputeBasicGLSL_release_objsdir)/%.o:
	$(ECHO) ComputeBasicGLSL: compiling release $(filter %$(strip $(subst .cc.o,.cc, $(subst $(ComputeBasicGLSL_release_objsdir),, $@))), $(ComputeBasicGLSL_ccfiles))...
	mkdir -p $(dir $(@))
	$(CXX) $(ComputeBasicGLSL_release_cppflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(ComputeBasicGLSL_release_objsdir),, $@))), $(ComputeBasicGLSL_ccfiles)) -o $@
	mkdir -p $(dir $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(ComputeBasicGLSL_release_objsdir),, $@))), $(ComputeBasicGLSL_ccfiles))))))
	cp $(ComputeBasicGLSL_release_DEPDIR).d $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(ComputeBasicGLSL_release_objsdir),, $@))), $(ComputeBasicGLSL_ccfiles))))).release.P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(ComputeBasicGLSL_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .cc.o,.cc, $(subst $(ComputeBasicGLSL_release_objsdir),, $@))), $(ComputeBasicGLSL_ccfiles))))).release.P; \
	  rm -f $(ComputeBasicGLSL_release_DEPDIR).d

$(ComputeBasicGLSL_release_c_o): $(ComputeBasicGLSL_release_objsdir)/%.o:
	$(ECHO) ComputeBasicGLSL: compiling release $(filter %$(strip $(subst .c.o,.c, $(subst $(ComputeBasicGLSL_release_objsdir),, $@))), $(ComputeBasicGLSL_cfiles))...
	mkdir -p $(dir $(@))
	$(CC) $(ComputeBasicGLSL_release_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(ComputeBasicGLSL_release_objsdir),, $@))), $(ComputeBasicGLSL_cfiles)) -o $@ 
	@mkdir -p $(dir $(addprefix $(DEPSDIR)/ComputeBasicGLSL/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(ComputeBasicGLSL_release_objsdir),, $@))), $(ComputeBasicGLSL_cfiles))))))
	cp $(ComputeBasicGLSL_release_DEPDIR).d $(addprefix $(DEPSDIR)/ComputeBasicGLSL/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(ComputeBasicGLSL_release_objsdir),, $@))), $(ComputeBasicGLSL_cfiles))))).P; \
	  sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(ComputeBasicGLSL_release_DEPDIR).d >> $(addprefix $(DEPSDIR)/ComputeBasicGLSL/release/, $(subst ./, , $(subst ../, , $(filter %$(strip $(subst .c.o,.c, $(subst $(ComputeBasicGLSL_release_objsdir),, $@))), $(ComputeBasicGLSL_cfiles))))).P; \
	  rm -f $(ComputeBasicGLSL_release_DEPDIR).d

clean_ComputeBasicGLSL:  clean_ComputeBasicGLSL_debug clean_ComputeBasicGLSL_release
	rm -rf $(DEPSDIR)

export VERBOSE
ifndef VERBOSE
.SILENT:
endif
